{"version":3,"sources":["images/phone-map.jpg","images/parkschein.jpg","serviceWorker.js","components/GlobalStyles.js","mixins/chartjs.js","theme/index.js","theme/shadows.js","theme/typography.js","layouts/DashboardLayout/NavBar/NavItem.js","layouts/DashboardLayout/NavBar/index.js","components/Logo.js","layouts/DashboardLayout/TopBar.js","layouts/DashboardLayout/index.js","layouts/CheckerDashboardLayout/NavBar/NavItem.js","layouts/CheckerDashboardLayout/NavBar/index.js","layouts/CheckerDashboardLayout/TopBar.js","layouts/CheckerDashboardLayout/index.js","layouts/MainLayout/TopBar.js","layouts/MainLayout/index.js","components/Page.js","views/account/AccountView/Profile.js","views/account/AccountView/ProfileDetails.js","views/account/AccountView/UpdatePassword.js","views/account/AccountView/index.js","views/home/HomeView/Welcome.js","views/home/HomeView/WelcomeSideBar.js","views/home/HomeView/index.js","views/auth/LoginView.js","views/auth/RegisterView.js","views/auth/VehicleRegistrationView.js","views/auth/ForgotPasswordView.js","views/auth/ResetPasswordView.js","views/errors/NotFoundView.js","views/settings/SettingsView/Notifications.js","views/settings/SettingsView/Password.js","views/settings/SettingsView/index.js","views/vehicles/VehiclesView/VehicleList.js","views/vehicles/VehiclesView/AddNewVehicle.js","views/vehicles/VehiclesView/index.js","views/payment/PaymentView/PaymentTypes.js","views/payment/PaymentView/AmountToPay.js","views/payment/PaymentView/index.js","views/parkingticket/ParkingTicketView/ActiveTicket.js","views/parkingticket/ParkingTicketView/BuyParkingTicket.js","views/parkingticket/ParkingTicketView/index.js","views/parkingticket/ParkingTicketView/TicketHistory.js","views/fines/FinesView/Fines.js","views/fines/FinesView/index.js","views/checker/CheckerLoginView.js","views/checker/CheckerAccountView/CheckerProfile.js","views/checker/CheckerAccountView/CheckerProfileDetails.js","views/checker/CheckerAccountView/index.js","views/checker/CheckerFinesView/CheckerFines.js","views/checker/CheckerFinesView/index.js","components/TakePicture.js","views/checker/ScanAndCheck.js","routes.js","App.js","index.js","images/quick-e-park-logo.jpg"],"names":["module","exports","Boolean","window","location","hostname","match","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","Chart","helpers","extend","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","theme","createMuiTheme","palette","background","dark","default","colors","common","white","paper","primary","main","indigo","secondary","text","blueGrey","shadows","typography","h1","fontWeight","fontSize","letterSpacing","fontStyle","fontFamily","h2","h3","h4","h5","h6","overline","item","display","paddingTop","paddingBottom","button","color","fontWeightMedium","justifyContent","textTransform","icon","marginRight","spacing","title","active","NavItem","className","href","Icon","rest","classes","ListItem","clsx","disableGutters","Button","activeClassName","component","RouterLink","to","size","localData","user","AccountCircleRoundedIcon","name","items","HomeIcon","LocalParkingOutlinedIcon","HistoryIcon","UserIcon","DriveEtaIcon","PaymentIcon","EuroSharpIcon","SettingsIcon","ExitToAppIcon","mobileDrawer","desktopDrawer","avatar","cursor","NavBar","onMobileClose","openMobile","useLocation","localDataKey","localStorage","getItem","JSON","parse","getLocalData","firstName","useEffect","pathname","content","Box","flexDirection","alignItems","p","Avatar","src","Typography","variant","jobTitle","Divider","List","map","key","flexGrow","m","bgcolor","Hidden","lgUp","Drawer","anchor","onClose","open","mdDown","defaultProps","Logo","props","style","alt","Applogo","root","TopBar","onMobileNavOpen","useState","notifications","AppBar","elevation","Toolbar","IconButton","Badge","badgeContent","length","onClick","overflow","wrapper","flex","breakpoints","up","paddingLeft","contentContainer","DashboardLayout","isMobileNavOpen","setMobileNavOpen","empId","ScannerIcon","CheckerDashboardLayout","toolbar","MainLayout","Page","forwardRef","ref","children","Helmet","fullName","input","Profile","Card","CardContent","gutterBottom","CardActions","accept","id","multiple","type","htmlFor","ProfileDetails","useNavigate","showUpdateError","setShowUpdateError","showUpdateMessage","setShowUpdateMessage","message","setMessage","Container","maxWidth","initialValues","lastName","licenseNumber","email","mobileNumber","validationSchema","Yup","shape","onSubmit","values","console","log","axios","method","data","headers","then","response","statusCode","statusDesc","catch","error","errors","handleBlur","handleChange","handleSubmit","touched","isSubmitting","CardHeader","subheader","Grid","container","md","xs","TextField","fullWidth","helperText","label","onChange","value","disabled","required","onBlur","my","Alert","severity","AlertTitle","UpdatePassword","password","confirmPassword","max","test","parent","status_code","minHeight","Account","lg","welcomebar","verticalAlign","welcometext","textAlign","Welcome","phoneimage","sidebar","ActiveTicket","welcomesidebarimage","Dashboard","state","sm","xl","LoginView","navigate","showLoginError","setShowLoginError","localDataValue","authentication","setItem","stringify","mb","Link","phoneRegex","RegExp","RegisterView","matches","when","is","oneOf","VehicleRegistrationView","vehicleLicensePlateNumber","policy","alert","replace","ml","Checkbox","checked","underline","FormHelperText","ForgotPasswordView","image","marginTop","NotFoundView","align","Notifications","wrap","FormControlLabel","control","defaultChecked","Password","confirm","setValues","event","target","SettingsView","mt","table","minWidth","VehicleList","vehicles","setState","fetchData","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","row","carRegNumber","scope","vehicleType","AddNewVehicle","ownerCheckBox","vehicleAlreadyAdded","showSuccessMessage","setShowSuccessMessage","showErrorMessage","setShowErrorMessage","showVehicleInfo","setShowVehicleInfo","vehicleInfoMessage","setVehicleInfoMessage","handleOwnerCheckBoxChange","registrationMsg","dirty","isValid","VehiclesView","AmountToPay","React","setValue","showPaymentPortal","setShowPaymentPortal","ticketAmount","fineAmount","pendingPayment","setPendingPayment","FormControl","FormLabel","RadioGroup","Radio","paypalID","amount","pendingAmountType","formControl","InputLabel","Select","native","inputProps","isFineAmount","PaymentView","activeTicketCount","rows","parkedCarRegNo","parkingFare","parkingLocation","parkingStartDate","remainingParkingDuration","activeTicketData","setActiveTicketData","showActiveWindow","setShowActiveWindow","showNoActiveWindow","setShowNoActiveWindow","showExtensionOption","setShowExtensionOption","Array","elementInArray","parkingEmail","timeToExtend","arr","push","buildOptions","BuyParkingTicket","showTicket","setShowTicket","showTicketInfo","setShowTicketInfo","showTicketError","setShowTicketError","ticketInfoMessage","setTicketInfoMessage","fetchVehicles","parkedLocation","parkingDuration","emailCheckBox","vehiclesRegNoList","vehiclesInProfile","ParkingTicket","TicketHistory","oldTicketCount","parkingEndDate","notificationEmail","oldTicketData","setOldTicketData","algin","paymentStatus","Fines","finesData","fineDate","carRegistrationNo","parkingFine","paidStatus","FinesView","TakePicture","ScanAndCheck","routes","path","element","HomeView","AccountView","ParkingTicketView","ResetPasswordView","App","routing","useRoutes","ThemeProvider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.86944a67.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/phone-map.32ac8c95.jpg\";","module.exports = __webpack_public_path__ + \"static/media/parkschein.e54a0f09.jpg\";","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStyles, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => createStyles({\n  '@global': {\n    '*': {\n      boxSizing: 'border-box',\n      margin: 0,\n      padding: 0,\n    },\n    html: {\n      '-webkit-font-smoothing': 'antialiased',\n      '-moz-osx-font-smoothing': 'grayscale',\n      height: '100%',\n      width: '100%'\n    },\n    body: {\n      backgroundColor: '#f4f6f8',\n      height: '100%',\n      width: '100%'\n    },\n    a: {\n      textDecoration: 'none'\n    },\n    '#root': {\n      height: '100%',\n      width: '100%'\n    }\n  }\n}));\n\nconst GlobalStyles = () => {\n  useStyles();\n\n  return null;\n};\n\nexport default GlobalStyles;\n","import { Chart } from 'react-chartjs-2';\n\n// ChartJS extension rounded bar chart\n// https://codepen.io/jedtrow/full/ygRYgo\nfunction draw() {\n  const { ctx } = this._chart;\n  const vm = this._view;\n  let { borderWidth } = vm;\n\n  let left;\n  let right;\n  let top;\n  let bottom;\n  let signX;\n  let signY;\n  let borderSkipped;\n  let radius;\n\n  // If radius is less than 0 or is large enough to cause drawing errors a max\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\n  let { cornerRadius } = this._chart.config.options;\n  if (cornerRadius < 0) {\n    cornerRadius = 0;\n  }\n\n  if (typeof cornerRadius === 'undefined') {\n    cornerRadius = 0;\n  }\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || 'bottom';\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || 'left';\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    const halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  const borders = ['bottom', 'left', 'top', 'right'];\n  let startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  let corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (let i = 1; i < 4; i += 1) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    const width = corners[2][0] - corners[1][0];\n    const height = corners[0][1] - corners[1][1];\n    const x = corners[1][0];\n    const y = corners[1][1];\n\n    radius = cornerRadius;\n    // Fix radius being too large\n    if (radius > Math.abs(height) / 2) {\n      radius = Math.floor(Math.abs(height) / 2);\n    }\n    if (radius > Math.abs(width) / 2) {\n      radius = Math.floor(Math.abs(width) / 2);\n    }\n\n    if (height < 0) {\n      // Negative values in a standard bar chart\n      const xTl = x;\n      const xTr = x + width;\n      const yTl = y + height;\n      const yTr = y + height;\n\n      const xBl = x;\n      const xBr = x + width;\n      const yBl = y;\n      const yBr = y;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else if (width < 0) {\n      // Negative values in a horizontal bar chart\n      const xTl = x + width;\n      const xTr = x;\n      const yTl = y;\n      const yTr = y;\n\n      const xBl = x + width;\n      const xBr = x;\n      const yBl = y + height;\n      const yBr = y + height;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else {\n      // Positive Value\n      ctx.moveTo(x + radius, y);\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(\n        x + width,\n        y + height,\n        x + width - radius,\n        y + height\n      );\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n    }\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n}\n\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\n  draw\n});\n","import { createMuiTheme, colors } from '@material-ui/core';\nimport shadows from './shadows';\nimport typography from './typography';\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      dark: '#F4F6F8',\n      default: colors.common.white,\n      paper: colors.common.white\n    },\n    primary: {\n      main: colors.indigo[500]\n    },\n    secondary: {\n      main: colors.indigo[500]\n    },\n    text: {\n      primary: colors.blueGrey[900],\n      secondary: colors.blueGrey[600]\n    }\n  },\n  shadows,\n  typography\n});\n\nexport default theme;\n","export default [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\n","export default {\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px',\n    fontStyle: 'italic',\n    fontFamily: '-apple-system'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\n","import React from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  ListItem,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: theme.palette.text.secondary,\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'flex-start',\n    letterSpacing: 0,\n    padding: '10px 8px',\n    textTransform: 'none',\n    width: '100%'\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    marginRight: 'auto'\n  },\n  active: {\n    color: theme.palette.primary.main,\n    '& $title': {\n      fontWeight: theme.typography.fontWeightMedium\n    },\n    '& $icon': {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nconst NavItem = ({\n  className,\n  href,\n  icon: Icon,\n  title,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <ListItem\n      className={clsx(classes.item, className)}\n      disableGutters\n      {...rest}\n    >\n      <Button\n        activeClassName={classes.active}\n        className={classes.button}\n        component={RouterLink}\n        to={href}\n      >\n        {Icon && (\n          <Icon\n            className={classes.icon}\n            size=\"20\"\n          />\n        )}\n        <span className={classes.title}>\n          {title}\n        </span>\n      </Button>\n    </ListItem>\n  );\n};\n\nNavItem.propTypes = {\n  className: PropTypes.string,\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string\n};\n\nexport default NavItem;\n","import React, { useEffect } from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Divider,\n  Drawer,\n  Hidden,\n  List,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  AlertCircle as AlertCircleIcon,\n  BarChart as BarChartIcon,\n  Lock as LockIcon,\n  Settings as SettingsIcon,\n  ShoppingBag as ShoppingBagIcon,\n  User as UserIcon,\n  UserPlus as UserPlusIcon,\n  Users as UsersIcon,\n  // ExitToAppIcon as ExitToAppIcon\n} from 'react-feather';\nimport NavItem from './NavItem';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ExitToAppIcon  from '@material-ui/icons/ExitToApp';\nimport DriveEtaIcon from '@material-ui/icons/DriveEta';\nimport PaymentIcon from '@material-ui/icons/Payment';\n// import MoneyOffIcon from '@material-ui/icons/MoneyOff';\nimport EuroSharpIcon from '@material-ui/icons/EuroSharp';\nimport AccountCircleRoundedIcon from '@material-ui/icons/AccountCircleRounded';\nimport LocalParkingOutlinedIcon from '@material-ui/icons/LocalParkingOutlined';\nimport HistoryIcon from '@material-ui/icons/History';\n\nlet localData= {};\nconst getLocalData = (localDataKey) => {\n  if (localStorage.getItem(localDataKey) != null){\n    return JSON.parse(localStorage.getItem(localDataKey));\n  }\n};\nconst setLocalData = (localDataKey,localDataValue) => {\n    localStorage.setItem(localDataKey, JSON.stringify(localDataValue));\n    localData = JSON.parse(localStorage.getItem(localDataKey));\n};\n\nconst user = {\n  icon: AccountCircleRoundedIcon,\n  // jobTitle: 'Senior Developer',\n  name: ''\n};\n\nconst items = [\n  {\n    href: '/app/home',\n    icon: HomeIcon,\n    title: 'Home'\n  },\n  {\n    href: '/app/parkingTicket',\n    icon: LocalParkingOutlinedIcon,\n    title: 'Parking Ticket'\n  },\n  {\n    href: '/app/ticketHistory',\n    icon: HistoryIcon,\n    title: 'Ticket History'\n  },\n  {\n    href: '/app/account',\n    icon: UserIcon,\n    title: 'Account'\n  },\n  {\n    href: '/app/Vehicles',\n    icon: DriveEtaIcon,\n    title: 'Vehicles'\n  },\n  {\n    href: '/app/Payment',\n    icon: PaymentIcon,\n    title: 'Payment '\n  },\n  {\n    href: '/app/fines',\n    icon: EuroSharpIcon,\n    title: 'Fines '\n  },\n  {\n    href: '/app/settings',\n    icon: SettingsIcon,\n    title: 'Settings'\n  },\n  {\n    href: '/app/logout',\n    icon: ExitToAppIcon,\n    title: 'Logout'\n  }\n];\n\nconst useStyles = makeStyles(() => ({\n  mobileDrawer: {\n    width: 256\n  },\n  desktopDrawer: {\n    width: 256,\n    top: 64,\n    height: 'calc(100% - 64px)'\n  },\n  avatar: {\n    cursor: 'pointer',\n    width: 64,\n    height: 64\n  }\n}));\n\nconst NavBar = ({ onMobileClose, openMobile }) => {\n  const classes = useStyles();\n  const location = useLocation();\n  localData = getLocalData(\"loginData\");\n  user.name = localData.firstName;\n  useEffect(() => {\n    if (openMobile && onMobileClose) {\n      onMobileClose();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname]);\n\n  const content = (\n    <Box\n      height=\"100%\"\n      display=\"flex\"\n      flexDirection=\"column\"\n    >\n      <Box\n        alignItems=\"center\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        p={2}\n      >\n        <Avatar\n          className={classes.avatar}\n          component={RouterLink}\n          src={user.icon}\n          to=\"/app/account\"\n        />\n        <Typography\n          className={classes.name}\n          color=\"textPrimary\"\n          variant=\"h5\"\n        >\n          {user.name}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          {user.jobTitle}\n        </Typography>\n      </Box>\n      <Divider />\n      <Box p={2}>\n        <List>\n          {items.map((item) => (\n            <NavItem\n              href={item.href}\n              key={item.title}\n              title={item.title}\n              icon={item.icon}\n            />\n          ))}\n        </List>\n      </Box>\n      <Box flexGrow={1} />\n      <Box\n        p={2}\n        m={2}\n        bgcolor=\"background.dark\"\n      >\n        {/* <Typography\n          align=\"center\"\n          gutterBottom\n          variant=\"h4\"\n        >\n          Need more?\n        </Typography>\n        <Typography\n          align=\"center\"\n          variant=\"body2\"\n        >\n          Upgrade to PRO version and access 20 more screens\n        </Typography>\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n          mt={2}\n        >\n          <Button\n            color=\"primary\"\n            component=\"a\"\n            href=\"https://react-material-kit.devias.io\"\n            variant=\"contained\"\n          >\n            See PRO version\n          </Button>\n        </Box> */}\n      </Box>\n    </Box>\n  );\n\n  return (\n    <>\n      <Hidden lgUp>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.mobileDrawer }}\n          onClose={onMobileClose}\n          open={openMobile}\n          variant=\"temporary\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n      <Hidden mdDown>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.desktopDrawer }}\n          open\n          variant=\"persistent\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n    </>\n  );\n};\n\nNavBar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool\n};\n\nNavBar.defaultProps = {\n  onMobileClose: () => {},\n  openMobile: false\n};\n\nexport default NavBar;\n","import React from 'react';\nimport Applogo from \"src/images/quick-e-park-logo.jpg\"\nconst Logo = (props) => {\n  return (\n    <div className=\"row\" style={{display:'flex'}}>\n    <div className=\"column\">\n    <img\n      alt=\"Logo\"\n      src = {Applogo}\n      \n      {...props}\n    />\n    </div>\n    <div className=\"column\">\n      <h3 style={{color:'white',padding:'15px'}}>Quick-E-Park</h3>\n    </div>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Badge,\n  Box,\n  Hidden,\n  IconButton,\n  Toolbar,\n  makeStyles\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport InputIcon from '@material-ui/icons/Input';\nimport Logo from 'src/components/Logo';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    width: 60,\n    height: 60\n  }\n}));\n\nconst TopBar = ({\n  className,\n  onMobileNavOpen,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [notifications] = useState([]);\n\n  return (\n    <AppBar\n      className={clsx(classes.root, className)}\n      elevation={0}\n      {...rest}\n    >\n      <Toolbar>\n        <RouterLink to=\"/app/home\">\n          <Logo />\n        </RouterLink>\n        <Box flexGrow={1} />\n        <Hidden mdDown>\n          <IconButton color=\"inherit\">\n            <Badge\n              badgeContent={notifications.length}\n              color=\"primary\"\n              variant=\"dot\"\n            >\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          <IconButton color=\"inherit\">\n            <InputIcon />\n          </IconButton>\n        </Hidden>\n        <Hidden lgUp>\n          <IconButton\n            color=\"inherit\"\n            onClick={onMobileNavOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onMobileNavOpen: PropTypes.func\n};\n\nexport default TopBar;\n","import React, { useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport NavBar from './NavBar';\nimport TopBar from './TopBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64,\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 256\n    }\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst DashboardLayout = () => {\n  const classes = useStyles();\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n\n  return (\n    <div className={classes.root}>\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\n      <NavBar\n        onMobileClose={() => setMobileNavOpen(false)}\n        openMobile={isMobileNavOpen}\n      />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardLayout;\n","import React from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  ListItem,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: theme.palette.text.secondary,\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'flex-start',\n    letterSpacing: 0,\n    padding: '10px 8px',\n    textTransform: 'none',\n    width: '100%'\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    marginRight: 'auto'\n  },\n  active: {\n    color: theme.palette.primary.main,\n    '& $title': {\n      fontWeight: theme.typography.fontWeightMedium\n    },\n    '& $icon': {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nconst NavItem = ({\n  className,\n  href,\n  icon: Icon,\n  title,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <ListItem\n      className={clsx(classes.item, className)}\n      disableGutters\n      {...rest}\n    >\n      <Button\n        activeClassName={classes.active}\n        className={classes.button}\n        component={RouterLink}\n        to={href}\n      >\n        {Icon && (\n          <Icon\n            className={classes.icon}\n            size=\"20\"\n          />\n        )}\n        <span className={classes.title}>\n          {title}\n        </span>\n      </Button>\n    </ListItem>\n  );\n};\n\nNavItem.propTypes = {\n  className: PropTypes.string,\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string\n};\n\nexport default NavItem;\n","import React, { useEffect } from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Divider,\n  Drawer,\n  Hidden,\n  List,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  AlertCircle as AlertCircleIcon,\n  BarChart as BarChartIcon,\n  Lock as LockIcon,\n  Settings as SettingsIcon,\n  ShoppingBag as ShoppingBagIcon,\n  User as UserIcon,\n  UserPlus as UserPlusIcon,\n  Users as UsersIcon,\n  // ExitToAppIcon as ExitToAppIcon\n} from 'react-feather';\nimport NavItem from './NavItem';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ExitToAppIcon  from '@material-ui/icons/ExitToApp';\nimport EuroSharpIcon from '@material-ui/icons/EuroSharp';\nimport ScannerIcon from '@material-ui/icons/Scanner';\nimport AccountCircleRoundedIcon from '@material-ui/icons/AccountCircleRounded';\nimport LocalParkingOutlinedIcon from '@material-ui/icons/LocalParkingOutlined';\n\nlet localData= {};\nconst getLocalData = (localDataKey) => {\n  if (localStorage.getItem(localDataKey) != null){\n    return JSON.parse(localStorage.getItem(localDataKey));\n  }\n};\nconst setLocalData = (localDataKey,localDataValue) => {\n    localStorage.setItem(localDataKey, JSON.stringify(localDataValue));\n    localData = JSON.parse(localStorage.getItem(localDataKey));\n};\n\nconst user = {\n  icon: AccountCircleRoundedIcon,\n  // jobTitle: 'Senior Developer',\n  name: '',\n  empId:''\n};\n\nconst items = [\n  {\n    href: '/app/internal/home',\n    icon: HomeIcon,\n    title: 'Home'\n  },\n  // {\n  //   href: '/app/internal/account',\n  //   icon: UserIcon,\n  //   title: 'Account'\n  // },\n  {\n    href: '/app/internal/scan&check',\n    icon: ScannerIcon,\n    title: 'Scan and Check'\n    \n  }\n  // {\n  //   href: '/app/internal/fines',\n  //   icon: EuroSharpIcon,\n  //   title: 'Fines'\n  // },\n  // {\n  //   href: '/app/internal/settings',\n  //   icon: SettingsIcon,\n  //   title: 'Settings'\n  // },\n  // {\n  //   href: '/app/internal/logout',\n  //   icon: ExitToAppIcon,\n  //   title: 'Logout'\n  // }\n];\n\nconst useStyles = makeStyles(() => ({\n  mobileDrawer: {\n    width: 256\n  },\n  desktopDrawer: {\n    width: 256,\n    top: 64,\n    height: 'calc(100% - 64px)'\n  },\n  avatar: {\n    cursor: 'pointer',\n    width: 64,\n    height: 64\n  }\n}));\n\nconst NavBar = ({ onMobileClose, openMobile }) => {\n  const classes = useStyles();\n  const location = useLocation();\n  // localData = getLocalData(\"loginData\");\n  // user.name = localData.firstName;\n  user.name = \"Rahane\";\n  // user.empId = localData.empId;\n  user.empId = 123456;\n  useEffect(() => {\n    if (openMobile && onMobileClose) {\n      onMobileClose();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname]);\n\n  const content = (\n    <Box\n      height=\"100%\"\n      display=\"flex\"\n      flexDirection=\"column\"\n    >\n      <Box\n        alignItems=\"center\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        p={2}\n      >\n        <Avatar\n          className={classes.avatar}\n          component={RouterLink}\n          src={user.icon}\n          to=\"/app/internal/account\"\n        />\n        <Typography\n          className={classes.name}\n          color=\"primary\"\n          variant=\"h2\"\n        >\n          {user.name}\n        </Typography>\n        <Typography\n          color=\"primary\"\n          variant=\"body2\"\n        >\n          Checker ID {user.empId}\n        </Typography>\n      </Box>\n      <Divider />\n      <Box p={2}>\n        <List>\n          {items.map((item) => (\n            <NavItem\n              href={item.href}\n              key={item.title}\n              title={item.title}\n              icon={item.icon}\n            />\n          ))}\n        </List>\n      </Box>\n      <Box flexGrow={1} />\n      <Box\n        p={2}\n        m={2}\n        bgcolor=\"background.dark\"\n      >\n        {/* <Typography\n          align=\"center\"\n          gutterBottom\n          variant=\"h4\"\n        >\n          Need more?\n        </Typography>\n        <Typography\n          align=\"center\"\n          variant=\"body2\"\n        >\n          Upgrade to PRO version and access 20 more screens\n        </Typography>\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n          mt={2}\n        >\n          <Button\n            color=\"primary\"\n            component=\"a\"\n            href=\"https://react-material-kit.devias.io\"\n            variant=\"contained\"\n          >\n            See PRO version\n          </Button>\n        </Box> */}\n      </Box>\n    </Box>\n  );\n\n  return (\n    <>\n      <Hidden lgUp>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.mobileDrawer }}\n          onClose={onMobileClose}\n          open={openMobile}\n          variant=\"temporary\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n      <Hidden mdDown>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.desktopDrawer }}\n          open\n          variant=\"persistent\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n    </>\n  );\n};\n\nNavBar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool\n};\n\nNavBar.defaultProps = {\n  onMobileClose: () => {},\n  openMobile: false\n};\n\nexport default NavBar;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Badge,\n  Box,\n  Hidden,\n  IconButton,\n  Toolbar,\n  makeStyles\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport InputIcon from '@material-ui/icons/Input';\nimport Logo from 'src/components/Logo';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    width: 60,\n    height: 60\n  }\n}));\n\nconst TopBar = ({\n  className,\n  onMobileNavOpen,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [notifications] = useState([]);\n\n  return (\n    <AppBar\n      className={clsx(classes.root, className)}\n      elevation={0}\n      {...rest}\n    >\n      <Toolbar>\n        <RouterLink to=\"/app/internal/home\">\n          <Logo />\n        </RouterLink>\n        <Box flexGrow={1} />\n        <Hidden mdDown>\n          <IconButton color=\"inherit\">\n            <Badge\n              badgeContent={notifications.length}\n              color=\"primary\"\n              variant=\"dot\"\n            >\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          <IconButton color=\"inherit\">\n            <InputIcon />\n          </IconButton>\n        </Hidden>\n        <Hidden lgUp>\n          <IconButton\n            color=\"inherit\"\n            onClick={onMobileNavOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onMobileNavOpen: PropTypes.func\n};\n\nexport default TopBar;\n","import React, { useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport NavBar from './NavBar';\nimport TopBar from './TopBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64,\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 256\n    }\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst CheckerDashboardLayout = () => {\n  const classes = useStyles();\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n\n  return (\n    <div className={classes.root}>\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\n      <NavBar\n        onMobileClose={() => setMobileNavOpen(false)}\n        openMobile={isMobileNavOpen}\n      />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CheckerDashboardLayout;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Toolbar,\n  makeStyles\n} from '@material-ui/core';\nimport Logo from 'src/components/Logo';\n\nconst useStyles = makeStyles(({\n  root: {},\n  toolbar: {\n    height: 64\n  }\n}));\n\nconst TopBar = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      className={clsx(classes.root, className)}\n      elevation={0}\n      {...rest}\n    >\n      <Toolbar className={classes.toolbar}>\n        <RouterLink to=\"/\">\n          <Logo />\n        </RouterLink>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TopBar;\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport TopBar from './TopBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst MainLayout = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <TopBar />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MainLayout;\n","import React, { forwardRef } from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nconst Page = forwardRef(({\n  children,\n  title = '',\n  ...rest\n}, ref) => {\n  return (\n    <div\n      ref={ref}\n      {...rest}\n    >\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport Applogo from \"src/images/quick-e-park-logo.jpg\"\nimport {\n  Avatar,\n  Box,\n  Button,\n  IconButton,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\n\nconst user = {\n  avatar: {Applogo},\n  fullName: ''\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      justifyContent:\"center\"\n    },\n  },\n  input: {\n    display: 'none',\n  },\n  avatar: {\n    height: 100,\n    width: 100\n  }\n}));\n\nlet localData= {};\nconst getLocalData = (localDataKey) => {\n  if (localStorage.getItem(localDataKey) != null){\n    return JSON.parse(localStorage.getItem(localDataKey));\n  }\n};\nconst setLocalData = (localDataKey,localDataValue) => {\n    localStorage.setItem(localDataKey, JSON.stringify(localDataValue));\n    localData = JSON.parse(localStorage.getItem(localDataKey));\n};\n\nconst Profile = ({ className, ...rest }) => {\n  const classes = useStyles();\n  localData = getLocalData(\"loginData\");\n  user.firstName = localData.firstName\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Box\n          alignItems=\"center\"\n          display=\"flex\"\n          flexDirection=\"column\"\n        >\n          <Avatar\n            className={classes.avatar}\n            src={user.avatar}\n          />\n          <Typography\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            {user.firstName}\n          </Typography>\n          {/* <Typography\n            color=\"textSecondary\"\n            variant=\"body1\"\n          >\n            {`${user.city} ${user.country}`}\n          </Typography>\n          <Typography\n            className={classes.dateText}\n            color=\"textSecondary\"\n            variant=\"body1\"\n          >\n            {`${moment().format('hh:mm A')} ${user.timezone}`}\n          </Typography> */}\n        </Box>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        {/* <Button\n          color=\"primary\"\n          fullWidth\n          variant=\"text\"\n        >\n          Upload picture\n        </Button> */}\n        <div className={classes.root}>\n      <input\n        accept=\"image/*\"\n        className={classes.input}\n        id=\"contained-button-file\"\n        multiple\n        type=\"file\"\n      />\n      <label htmlFor=\"contained-button-file\">\n        <Button variant=\"contained\" color=\"primary\" component=\"span\">\n          Upload\n        </Button>\n      </label>\n      <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" />\n      {/* <label htmlFor=\"icon-button-file\">\n        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n          <PhotoCamera />\n        </IconButton>\n      </label> */}\n    </div>\n      </CardActions>\n    </Card>\n  );\n};\n\nProfile.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Profile;\n","import React, { useEffect, useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport Page from 'src/components/Page';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField,\n  makeStyles,\n  Container,\n  Link,\n  Typography\n} from '@material-ui/core';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nlet localData = {};\nconst getLocalData = (localDataKey) => {\n  if (localStorage.getItem(localDataKey) != null) {\n    return JSON.parse(localStorage.getItem(localDataKey));\n  }\n};\nconst setLocalData = (localDataKey, localDataValue) => {\n  localStorage.setItem(localDataKey, JSON.stringify(localDataValue));\n  localData = JSON.parse(localStorage.getItem(localDataKey));\n};\nconst ProfileDetails = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  localData = getLocalData(\"loginData\");\n\n  const [showUpdateError, setShowUpdateError] = useState(false);\n  const [showUpdateMessage, setShowUpdateMessage] = useState(false);\n  const [message, setMessage] = useState('');\n  return (\n    <Page\n      className={classes.root}\n      title=\"Login\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n      // justifyContent=\"center\"\n      >\n        <Container maxWidth=\"md\">\n          <Formik\n            initialValues={{\n              firstName: localData.firstName,\n              lastName: localData.lastName,\n              licenseNumber: localData.licenseNumber,\n              // email: localData.email,\n              email:\"thirumal1206@gmail.com\",\n              mobileNumber: localData.mobileNumber\n            }}\n            validationSchema={Yup.object().shape({\n              // email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n            })}\n            onSubmit={values => {\n              console.log(values);\n              // axios('http://localhost:5000/updateProfile', {\n                axios('http://067a5647fe15.ngrok.io/updateProfileData',{\n                method: 'POST',\n                data: values,\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Accept': 'application/json'\n                }\n              })\n                .then(response => {\n                  console.log(response.data);\n                  if (response.data.statusCode == 200) {\n                    setShowUpdateError(false);\n                    setShowUpdateMessage(true);\n                    setMessage(response.data.statusDesc);\n                    // setLocalData(\"loginData\", response.data.data);\n                    // console.log(\"Login Page after api call--->\", localData);\n                    // navigate('/app/home');\n\n                  }\n                  else {\n                    // setShowLoginError(true);\n                    setShowUpdateError(true);\n                    setShowUpdateMessage(false);\n                    setMessage(response.data.statusDesc);\n                    // console.log(values)\n                  }\n                })\n                .catch(error => {\n                  // this({ errorMessage: error.message });\n                  console.error('There was an error!', error);\n                });\n              // }\n\n            }\n            }\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Card>\n                  <CardHeader\n                    subheader=\"The information can be edited\"\n                    title=\"Profile\"\n                  />\n                  <Divider />\n                  <CardContent>\n                    <Grid\n                      container\n                      spacing={6}\n                    >\n                      <Grid\n                        item\n                        md={6}\n                        xs={12}\n                      >\n                        <TextField\n                          fullWidth\n                          helperText=\"Your first name\"\n                          label=\"First name\"\n                          name=\"firstName\"\n                          onChange={handleChange}\n                          value={values.firstName}\n                          variant=\"outlined\"\n                        />\n                      </Grid>\n\n                      <Grid\n                        item\n                        md={6}\n                        xs={12}\n                      >\n                        <TextField\n                          fullWidth\n                          helperText=\"Your last name\"\n                          label=\"Last name\"\n                          name=\"lastName\"\n                          onChange={handleChange}\n                          value={values.lastName}\n                          variant=\"outlined\"\n                        />\n                      </Grid>\n                      <Grid\n                        item\n                        md={6}\n                        xs={12}\n                      >\n                        <TextField\n                          fullWidth\n                          disabled\n                          label=\"License number\"\n                          name=\"licenseNumber\"\n                          onChange={handleChange}\n                          required\n                          value={values.licenseNumber}\n                          variant=\"outlined\"\n                        />\n                      </Grid>\n                      <Grid\n                        item\n                        md={6}\n                        xs={12}\n                      >\n                        <TextField\n                          error={Boolean(touched.email && errors.email)}\n                          // fullWidth\n                          disabled\n                          required\n                          helperText={touched.email && errors.email}\n                          label=\"Email Address\"\n                          margin=\"normal\"\n                          name=\"email\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          type=\"email\"\n                          value={values.email}\n                          variant=\"outlined\"\n                        />\n\n                      </Grid>\n                      <Grid\n                        item\n                        md={6}\n                        xs={12}\n                      >\n                        <TextField\n                          fullWidth\n                          label=\"Mobile Number\"\n                          name=\"mobileNumber\"\n                          onChange={handleChange}\n                          // type=\"number\"\n                          value={values.mobileNumber}\n                          variant=\"outlined\"\n                        />\n                      </Grid>\n                      <Grid\n                        item\n                        md={6}\n                        xs={12}\n                      >\n                        <Box my={2}>\n                          <Button\n                            color=\"primary\"\n                            // disabled={isSubmitting}\n                            // fullWidth\n                            size=\"large\"\n                            type=\"submit\"\n                            variant=\"contained\"\n                            name=\"updateProfile\"\n\n                          >\n                            Update Profile\n                          </Button>\n                        </Box>\n                      </Grid>\n                      <Divider />\n\n                      {showUpdateMessage ? <Container maxWidth=\"sm\">\n                      <Grid\n                        item\n                        md={6}\n                        xs={12}\n                      >\n                        <div className=\"Update Success\">\n                          <Alert severity=\"success\">\n                            <AlertTitle>Updated Successfully</AlertTitle>\n                            <strong>{message}</strong>\n                          </Alert>\n                        </div>\n                        </Grid>\n                      </Container> : null}\n                      {showUpdateError ? <Container maxWidth=\"sm\">\n                      <Grid\n                        item\n                        md={6}\n                        xs={12}\n                      >\n                        <div className=\"Update Error\">\n                          <Alert severity=\"error\">\n                            <AlertTitle>Update Error</AlertTitle>\n                            <strong>{message}</strong>\n                          </Alert>\n                        </div>\n                        </Grid>\n                      </Container> : null}\n                    </Grid>\n                  </CardContent>\n                </Card>\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nProfileDetails.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ProfileDetails;\n","import React, { useEffect, useState } from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport axios from 'axios';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  FormHelperText,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  makeStyles,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\n// import { values } from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nlet localData = {};\r\nconst getLocalData = (localDataKey) => {\r\n  if (localStorage.getItem(localDataKey) != null) {\r\n    return JSON.parse(localStorage.getItem(localDataKey));\r\n  }\r\n};\r\nconst setLocalData = (localDataKey, localDataValue) => {\r\n  localStorage.setItem(localDataKey, JSON.stringify(localDataValue));\r\n  localData = JSON.parse(localStorage.getItem(localDataKey));\r\n};\r\n\r\nconst UpdatePassword = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  localData = getLocalData(\"loginData\");\r\n  const [showUpdateError, setShowUpdateError] = useState(false);\r\n  const [showUpdateMessage, setShowUpdateMessage] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Register\"\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        // justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"md\">\r\n          <Formik\r\n            initialValues={{\r\n              email: localData.email,\r\n              password: '',\r\n              confirmPassword: ''\r\n            }}\r\n            validationSchema={\r\n              Yup.object().shape({\r\n                password: Yup.string().max(255).required('password is required'),\r\n                confirmPassword: Yup.string().required().label('Confirm Password').test('passwords-match', 'Both Passwords should match', function (value) {\r\n                  return this.parent.password === value;\r\n                }),\r\n              })\r\n            }\r\n            onSubmit={values => {\r\n              axios('http://localhost:5000/updateNewPassword', {\r\n                method: 'POST',\r\n                data: values,\r\n                headers: {\r\n                  'Content-Type': 'application/json'\r\n                }\r\n              })\r\n                .then(response => {\r\n                  console.log(response.data);\r\n                  if (response.data.status_code == 200) {\r\n                    setShowUpdateError(false);\r\n                    setShowUpdateMessage(true);\r\n                    setMessage(response.data.statusDesc);\r\n                    // this.props.history.push({'pathname':'/dashboard',state:this.state});\t\t\t\r\n                  }\r\n                  else {\r\n                    setShowUpdateError(true);\r\n                    setShowUpdateMessage(false);\r\n                    setMessage(response.data.statusDesc);\r\n                  }\r\n                })\r\n                .catch(error => {\r\n                  // this({ errorMessage: error.message });\r\n                  console.error('There was an error!', error);\r\n                });\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Card>\r\n                  <CardHeader\r\n                    subheader=\"You can update your password here\"\r\n                    title=\"Update New Password\"\r\n                  />\r\n                  <Divider />\r\n                  <CardContent>\r\n                    <Grid\r\n                      container\r\n                      spacing={3}\r\n                    >\r\n                      <Grid\r\n                        item\r\n                        md={6}\r\n                        xs={12}\r\n                      >\r\n                        <TextField\r\n                          error={Boolean(touched.password && errors.password)}\r\n                          fullWidth\r\n                          required\r\n                          helperText={touched.password && errors.password}\r\n                          label=\"Password\"\r\n                          margin=\"normal\"\r\n                          name=\"password\"\r\n                          onBlur={handleBlur}\r\n                          onChange={handleChange}\r\n                          type=\"password\"\r\n                          value={values.password}\r\n                          variant=\"outlined\"\r\n                        />\r\n\r\n                      </Grid>\r\n                      <Grid\r\n                        item\r\n                        md={6}\r\n                        xs={12}\r\n                      >\r\n                        <TextField\r\n                          error={Boolean(touched.confirmPassword && errors.confirmPassword)}\r\n                          fullWidth\r\n                          required\r\n                          helperText={touched.confirmPassword && errors.confirmPassword}\r\n                          label=\"Confirm Password\"\r\n                          margin=\"normal\"\r\n                          name=\"confirmPassword\"\r\n                          onBlur={handleBlur}\r\n                          onChange={handleChange}\r\n                          type=\"password\"\r\n                          value={values.confirmPassword}\r\n                          variant=\"outlined\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid\r\n                        item\r\n                        md={6}\r\n                        xs={12}\r\n                      >\r\n                        <Box my={2}>\r\n                          <Button\r\n                            color=\"primary\"\r\n                            // disabled={isSubmitting}\r\n                            // fullWidth\r\n                            size=\"large\"\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                          >\r\n                            Update Password\r\n                          </Button>\r\n                        </Box>\r\n                      </Grid>\r\n                      <Divider />\r\n                      {showUpdateMessage ? <Container maxWidth=\"sm\">\r\n                        <Grid\r\n                          item\r\n                          md={6}\r\n                          xs={12}\r\n                        >\r\n                          <div className=\"Update Success\">\r\n                            <Alert severity=\"success\">\r\n                              <AlertTitle>Updated Successfully</AlertTitle>\r\n                              <strong>{message}</strong>\r\n                            </Alert>\r\n                          </div>\r\n                        </Grid>\r\n                      </Container> : null}\r\n                      {showUpdateError ? <Container maxWidth=\"sm\">\r\n                        <Grid\r\n                          item\r\n                          md={6}\r\n                          xs={12}\r\n                        >\r\n                          <div className=\"Update Error\">\r\n                            <Alert severity=\"error\">\r\n                              <AlertTitle>Update Error</AlertTitle>\r\n                              <strong>{message}</strong>\r\n                            </Alert>\r\n                          </div>\r\n                        </Grid>\r\n                      </Container> : null}\r\n                      </Grid>\r\n                      </CardContent>\r\n                      </Card>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default UpdatePassword;\r\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Profile from './Profile';\nimport ProfileDetails from './ProfileDetails';\nimport UpdatePassword from './UpdatePassword';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Account = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Account\"\n    >\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={4}\n            md={8}\n            xs={10}\n          >\n            <Profile />\n          </Grid>\n          <Grid\n            item\n            lg={6}\n            md={8}\n            xs={10}\n          >\n            <UpdatePassword />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={10}\n            xs={12}\n          >\n            <ProfileDetails />\n          </Grid>\n          \n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Account;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  Link,\n  TextField,\n  Select,\n  InputLabel,\n  FormControl,\n  NativeSelect,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport EmojiEmotionsSharpIcon from '@material-ui/icons/EmojiEmotionsSharp';\nimport FacebookIcon from 'src/icons/Facebook';\nimport GoogleIcon from 'src/icons/Google';\nimport Page from 'src/components/Page';\nimport phoneimage from 'src/images/phone-map.jpg';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  welcomebar:{\n    height:'100%',\n    verticalAlign: 'top',\n  },\n  welcometext: {\n    // height: '100%',\n    backgroundColor: theme.palette.background.dark,\n    verticalAlign: 'top',\n    textAlign: 'justify',\n    fontStyle: 'italic',\n    fontFamily: '-apple-system',\n    justifyContent: 'top'\n  }\n}));\n\nlet localData = {};\nconst getLocalData = (localDataKey) => {\n  if (localStorage.getItem(localDataKey) != null) {\n    return JSON.parse(localStorage.getItem(localDataKey));\n  }\n};\n\nconst setLocalData = (localDataKey, localDataValue) => {\n  localStorage.setItem(localDataKey, JSON.stringify(localDataValue));\n  localData = JSON.parse(localStorage.getItem(localDataKey));\n};\n\nconst Welcome = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Welcome\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"sm\">\n          <div className={classes.welcomebar}>\n          <div className={classes.welcometext}>\n            <h1>Quick-E-Park</h1>\n            <h4>An easy online parking website</h4>\n            <br></br>\n            <p>Quick-E-Park aims at helping the German citizens by easing down challenges in the existing parking ticket system. This project is a web application for online parking ticket system which offers various features such as pay and park online, online parking ticket extension online, parking ticket expiry notifications for both users and checkers and so on.</p>\n            <br></br>\n            <img src={phoneimage} ></img>\n          </div>\n          </div>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default Welcome;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  Link,\n  TextField,\n  Select,\n  InputLabel,\n  FormControl,\n  NativeSelect,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport FacebookIcon from 'src/icons/Facebook';\nimport GoogleIcon from 'src/icons/Google';\nimport Page from 'src/components/Page';\nimport welcomesidebarimage from 'src/images/parkschein.jpg'\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  sidebar: {\n\n  }\n}));\n\n\nlet localData = {};\nconst getLocalData = (localDataKey) => {\n  if (localStorage.getItem(localDataKey) != null) {\n    return JSON.parse(localStorage.getItem(localDataKey));\n  }\n};\n\nconst setLocalData = (localDataKey, localDataValue) => {\n  localStorage.setItem(localDataKey, JSON.stringify(localDataValue));\n  localData = JSON.parse(localStorage.getItem(localDataKey));\n};\n\nconst ActiveTicket = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Welcome Side Bar\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n      // justifyContent=\"right\"\n      >\n        <Container maxWidth=\"sm\">\n          <div className=\"sidebar\">\n            {/* <div className={classes.highlight}> */}\n              <h2>No need for any app download !!</h2><br></br>\n              <h2>Login from anywhere using any device!</h2>\n              <br></br>\n            {/* </div> */}\n            <img src={welcomesidebarimage}></img>\n          </div>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default ActiveTicket;\n","import React, {useEffect, useState} from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\n\nimport Page from 'src/components/Page';\nimport Welcome from './Welcome';\nimport WelcomeSidebar from './WelcomeSideBar';\n// import GeoLocation from './GeoLocation';\n// import useCurrentLocation from \"src/views/geo/GeoLocationView/useCurrentLocation\";\n// import useWatchLocation from \"src/views/geo/GeoLocationView/useWatchLocation\";\n// import { geolocationOptions } from \"src/views/geo/GeoLocationView/geolocationOptions\";\n// import MapContainer from \"./MapContainer\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nlet localData= {};\nconst getLocalData = (localDataKey) => {\n  if (localStorage.getItem(localDataKey) != null){\n    return JSON.parse(localStorage.getItem(localDataKey));\n  }\n};\nconst setLocalData = (localDataKey,localDataValue) => {\n    localStorage.setItem(localDataKey, JSON.stringify(localDataValue));\n    localData = JSON.parse(localStorage.getItem(localDataKey));\n};\n\n// const successHandler = position => console.log(position.coord);\n\n// const errorHandler = error => console.error(error.message);\n\n// const geolocationOptions = {\n//   enableHighAccuracy: true,\n//   timeout: 1000 * 60 * 1, // 1 min (1000 ms * 60 sec * 1 minute = 60 000ms)\n//   maximumAge: 1000 * 3600 * 24 // 24 hour\n// };\nconst Dashboard = (state,props) => {\n  const classes = useStyles();\n  localData = getLocalData(\"loginData\");\n  // const { location: currentLocation, error: currentError } = useCurrentLocation(geolocationOptions);\n  // const { location, cancelLocationWatch, error } = useWatchLocation(geolocationOptions);\n  // const [isWatchinForLocation, setIsWatchForLocation] = useState(true);\n\n  // useEffect(() => {\n  //   if (!location) return;\n\n  //   // Cancel location watch after 3sec\n  //   setTimeout(() => {\n  //     cancelLocationWatch();\n  //     setIsWatchForLocation(false);\n  //   }, 3000);\n  // }, [location, cancelLocationWatch]);\n\n  // console.log({currentLocation});\n  // const locationWatchId = navigator.geolocation.watchPosition(successHandler, errorHandler, geolocationOptions);\n  // console.log(locationWatchId);\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Dashboard\"\n    >\n      {/* <div>{GeoLocation}</div> */}\n      <Container maxWidth={false}>\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={5}\n            sm={12}\n            xl={1}\n            xs={12}\n          >\n            <Welcome />\n          </Grid>\n          <Grid\n            item\n            lg={5}\n            sm={10}\n            xl={5}\n            xs={12}\n          >\n            <WelcomeSidebar />\n          </Grid>\n          {/* <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <MapContainer />\n          </Grid> */}\n\n          {/* <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <Budget />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <TotalCustomers />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <TasksProgress />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <TotalProfit />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={12}\n            xl={9}\n            xs={12}\n          >\n            <Sales />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            md={6}\n            xl={3}\n            xs={12}\n          >\n            <TrafficByDevice />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            md={6}\n            xl={3}\n            xs={12}\n          >\n            <LatestProducts />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={12}\n            xl={9}\n            xs={12}\n          >\n            <LatestOrders />\n          </Grid> */}\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Dashboard;\n","import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  Link,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport FacebookIcon from 'src/icons/Facebook';\nimport GoogleIcon from 'src/icons/Google';\nimport Page from 'src/components/Page';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\nconst loginErrorText = ({\n  loginError:{\n    display:'none'\n  }\n});\nlet localData= {};\nconst getLocalData = (localDataKey) => {\n  if (localStorage.getItem(localDataKey) != null){\n    localData = JSON.parse(localStorage.getItem(localDataKey));\n    return localData;\n  }\n};\nconst setLocalData = (localDataKey,localDataValue) => {\n    localStorage.setItem(localDataKey, JSON.stringify(localDataValue));\n    localData = JSON.parse(localStorage.getItem(localDataKey));\n};\nconst LoginView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const [showLoginError, setShowLoginError] = useState(false);\n  // const verfiyLogin = verifyLogin();\n  return (\n    <Page\n      className={classes.root}\n      title=\"Login\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              email: '',\n              password: ''\n            }}\n            validationSchema={Yup.object().shape({\n              email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n              password: Yup.string().max(255).required('Password is required')\n            })}\n            onSubmit={values => \n              {\n                console.log(values);\n                axios('http://localhost:5000/login', {\n                  // axios('https://86b934886ba0.ngrok.io/loginvalid',{\n                  method: 'POST',\n                  data : values,\n                  headers: {\n                   'Content-Type': 'application/json',\n                   'Accept':'application/json'\n                   }})\n                  .then(response => {console.log(response.data);\n                  if(response.data.data.authentication) { \n                      setLocalData(\"loginData\", response.data.data);\n                      console.log(\"Login Page after api call--->\",localData);\n                      navigate('/app/home');\n                  }\n                  else {\n                    setShowLoginError(true);\n                    console.log(values)\n                  }\n                })\n                      .catch(error => {\n                          // this({ errorMessage: error.message });\n                       console.error('There was an error!', error);\n                  });\n              // }\n            \n            }\n          }\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box mb={3}>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h1\"\n                  >\n                    Sign in\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    Sign in with the registered email\n                  </Typography>\n                </Box>\n                <TextField\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  label=\"Email Address\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.email}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                <Box my={2}>\n                  <Button\n                    color=\"primary\"\n                    // disabled={isSubmitting}\n                    // fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                    name=\"signInBtn\"\n                    \n                  >\n                    Sign in now\n                  </Button>\n                </Box>\n                {/* <Typography\n                  color=\"error\"\n                  variant=\"body1\"\n                  name=\"loginError\"\n                  align = \"center\"\n                  // display =\"none\"\n                >\n                  Invalid Login Details\n                </Typography> */}\n                {/* <div className = \"loginError\">\n                  <center><h3>Invalid email or password</h3></center>\n                </div> */}\n                {showLoginError ? <Container maxWidth=\"sm\">\n                <div className = \"loginError\">\n                  <Alert severity=\"error\">\n                    <AlertTitle>Login Error</AlertTitle>\n                    <strong>Invalid Login email or password</strong>\n                  </Alert>\n                </div>\n                </Container> : null}\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  Don&apos;t have an account?\n                  {' '}\n                  <Link\n                    component={RouterLink}\n                    to=\"/register\"\n                    variant=\"h6\"\n                  >\n                    Sign up\n                  </Link>\n                </Typography>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  {/* Don&apos;t have an account? */}\n                  {' '}\n                  <Link\n                    component={RouterLink}\n                    to=\"/forgotPassword\"\n                    variant=\"h6\"\n                  >\n                    Forgot Password?\n                  </Link>\n                </Typography>\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default LoginView;\n","import React from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Container,\n  FormHelperText,\n  Link,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { values } from 'lodash';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nlet localData = {};\nconst getLocalData = (localDataKey) => {\n  if (localStorage.getItem(localDataKey) != null) {\n    localData = JSON.parse(localStorage.getItem(localDataKey));\n    return localData;\n  }\n};\nconst setLocalData = (localDataKey, localDataValue) => {\n  localStorage.setItem(localDataKey, JSON.stringify(localDataValue));\n  localData = JSON.parse(localStorage.getItem(localDataKey));\n};\n\nconst phoneRegex = RegExp(\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\n);\n\nconst RegisterView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Register\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"105%\"\n        justifyContent=\"top\"\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              email: '',\n              firstName: '',\n              lastName:'',\n              mobileNumber: '',\n              password: '',\n              confirmPassword: ''\n            }}\n            validationSchema={\n              Yup.object().shape({\n                email: Yup.string().email('Must be a valid email').max(255).required('Please enter your email'),\n                firstName: Yup.string().max(255).required('Please enter your first name'),\n                lastName: Yup.string().max(255).required('Please enter your last name'),\n                mobileNumber: Yup.string().matches(phoneRegex, 'Phone number is not valid'),\n                password: Yup.string().required(\"Please enter your password\")\n                  .matches(\n                    /^.*(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\n                    \"Password must contain at least 8 characters, one uppercase, one number and one special case character\"\n                  ),\n                confirmPassword: Yup.string().required(\"Please confirm your password\")\n                  .when(\"password\", {\n                    is: password => (password && password.length > 0 ? true : false),\n                    then: Yup.string().oneOf([Yup.ref(\"password\")], \"Password doesn't match\")\n                  })\n              })\n            }\n            onSubmit={values => {\n              setLocalData(\"newRegistrationData\", values);\n              localData = getLocalData(\"newRegistrationData\");\n              navigate('/vehicleRegistration');\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box mb={3}>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h2\"\n                  >\n                    Create new account\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    Fields with * are mandatory\n                  </Typography>\n                </Box>\n                <TextField\n                  error={Boolean(touched.firstName && errors.firstName)}\n                  fullWidth\n                  required\n                  helperText={touched.firstName && errors.firstName}\n                  label=\"First name\"\n                  margin=\"normal\"\n                  name=\"firstName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.firstName}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.lastName && errors.lastName)}\n                  fullWidth\n                  required\n                  helperText={touched.lastName && errors.lastName}\n                  label=\"Last name\"\n                  margin=\"normal\"\n                  name=\"lastName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.lastName}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.mobileNumber && errors.mobileNumber)}\n                  fullWidth\n                  required\n                  helperText={touched.mobileNumber && errors.mobileNumber}\n                  label=\"Mobile number\"\n                  margin=\"normal\"\n                  name=\"mobileNumber\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.mobileNumber}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  required\n                  helperText={touched.email && errors.email}\n                  label=\"Email Address\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.email}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  required\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.confirmPassword && errors.confirmPassword)}\n                  fullWidth\n                  required\n                  helperText={touched.confirmPassword && errors.confirmPassword}\n                  label=\"Confirm Password\"\n                  margin=\"normal\"\n                  name=\"confirmPassword\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  variant=\"outlined\"\n                />\n                <Box my={2}>\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Next\n                  </Button>\n                </Box>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  Have an account?\n                  {' '}\n                  <Link\n                    component={RouterLink}\n                    to=\"/login\"\n                    variant=\"h6\"\n                  >\n                    Sign in\n                  </Link>\n                </Typography>\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default RegisterView;\n","import React from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport axios from 'axios';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  FormHelperText,\r\n  Container,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport FacebookIcon from 'src/icons/Facebook';\r\nimport GoogleIcon from 'src/icons/Google';\r\nimport Page from 'src/components/Page';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nlet localData= {};\r\nconst getLocalData = (localDataKey) => {\r\n  if (localStorage.getItem(localDataKey) != null){\r\n    localData = JSON.parse(localStorage.getItem(localDataKey));\r\n    return localData;\r\n  }\r\n};\r\nconst setLocalData = (localDataKey,localDataValue) => {\r\n    localStorage.setItem(localDataKey, JSON.stringify(localDataValue));\r\n    localData = JSON.parse(localStorage.getItem(localDataKey));\r\n};\r\nconst VehicleRegistrationView = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  localData = getLocalData(\"newRegistrationData\");\r\n  console.log(localData);\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Login\"\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"top\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              licenseNumber: '',\r\n              vehicleLicensePlateNumber: '',\r\n              policy: false,\r\n              email: '',\r\n              fullName: '',\r\n              mobileNumber: '',\r\n              password: '',\r\n              confirmPassword: ''\r\n              \r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              // email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n              // licenseNumber: Yup.string().max(12).required('Enter a valid license number'),\r\n              licenseNumber: Yup.string().max(255).required('License Number is required'),\r\n              policy: Yup.boolean().oneOf([true], 'This field must be checked')\r\n            })}\r\n            onSubmit={(values) => {\r\n              values.email = localData.email;\r\n              values.firstName = localData.firstName;\r\n              values.lastName = localData.lastName;\r\n              values.mobileNumber = localData.mobileNumber;\r\n              values.password = localData.password;\r\n              values.confirmPassword = localData.confirmPassword;\r\n              axios('http://localhost:5000/addNewRegistration', {\r\n                \r\n                // axios('https://bb1ebabc1d2d.ngrok.io/addNewRegistration', {\r\n                method: 'POST',\r\n                data: values,\r\n                headers: {\r\n                  'Content-Type': 'application/json'\r\n                }\r\n              })\r\n                .then(response => {\r\n                  console.log(response.data);\r\n                  if (response.data.statusCode == 200) {\r\n                    alert(\"Successfully Registered, Please Login!\");\r\n                    navigate('/', { replace: true });\r\n                  }\r\n                })\r\n                .catch(error => {\r\n                  console.error('There was an error!', error);\r\n                });\r\n\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box mb={3}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h1\"\r\n                  >\r\n                    License and Vehicle Registration\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    Fields with * are mandatory\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.licenseNumber && errors.licenseNumber)}\r\n                  fullWidth\r\n                  required\r\n                  helperText={touched.licenseNumber && errors.licenseNumber}\r\n                  label=\"License number\"\r\n                  margin=\"normal\"\r\n                  name=\"licenseNumber\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.licenseNumber}\r\n                  variant=\"outlined\"\r\n                />\r\n                {/* <TextField\r\n                  error={Boolean(touched.vehicleLicensePlateNumber && errors.vehicleLicensePlateNumber)}\r\n                  fullWidth\r\n                  helperText={touched.vehicleLicensePlateNumber && errors.vehicleLicensePlateNumber}\r\n                  label=\"vehicle License Plate number\"\r\n                  margin=\"normal\"\r\n                  name=\"vehicleLicensePlateNumber\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.vehicleLicensePlateNumber}\r\n                  variant=\"outlined\"\r\n                /> */}\r\n                <Box\r\n                  alignItems=\"center\"\r\n                  display=\"flex\"\r\n                  ml={-1}\r\n                >\r\n                  <Checkbox\r\n                    checked={values.policy}\r\n                    name=\"policy\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    I have read the\r\n                    {' '}\r\n                    <Link\r\n                      color=\"primary\"\r\n                      component={RouterLink}\r\n                      to=\"#\"\r\n                      underline=\"always\"\r\n                      variant=\"h6\"\r\n                    >\r\n                      Terms and Conditions\r\n                    </Link>\r\n                  </Typography>\r\n                </Box>\r\n                {Boolean(touched.policy && errors.policy) && (\r\n                  <FormHelperText error>\r\n                    {errors.policy}\r\n                  </FormHelperText>\r\n                )}\r\n                <Box my={2}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Sign Up\r\n                  </Button>\r\n                </Box>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default VehicleRegistrationView;\r\n","import React from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  Link,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport FacebookIcon from 'src/icons/Facebook';\nimport GoogleIcon from 'src/icons/Google';\nimport Page from 'src/components/Page';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst ForgotPasswordView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Login\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              email: '',\n              // password: ''\n            }}\n            validationSchema={Yup.object().shape({\n              email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n              // password: Yup.string().max(255).required('Password is required')\n            })}\n            onSubmit={() => {\n              navigate('/resetPassword', { replace: true });\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box mb={3}>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h1\"\n                  >\n                    Reset Password\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    Enter your registered email\n                  </Typography>\n                </Box>\n                <TextField\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  label=\"Email Address\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.email}\n                  variant=\"outlined\"\n                />\n                <Box my={2}>\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Send link to reset password\n                  </Button>\n                </Box>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  Don&apos;t have an account?\n                  {' '}\n                  <Link\n                    component={RouterLink}\n                    to=\"/register\"\n                    variant=\"h6\"\n                  >\n                    Sign up\n                  </Link>\n                </Typography>\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default ForgotPasswordView;\n","import React from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport axios from 'axios';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  FormHelperText,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport { values } from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst RegisterView = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Register\"\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              email: 'thirumal120@gmail.com',\r\n              password: '',\r\n              confirmPassword:''\r\n            }}\r\n            validationSchema={\r\n              Yup.object().shape({\r\n                password: Yup.string().max(255).required('password is required'),\r\n                confirmPassword: Yup.string().required().label('Confirm Password').test('passwords-match', 'Both Passwords should match', function(value) {\r\n                                    return this.parent.password === value;\r\n                }),\r\n              })\r\n            }\r\n            onSubmit={values => {\r\n              axios('http://localhost:5000/updateNewPassword', {\r\n                  method: 'POST',\r\n                  data : values,\r\n                  headers: {\r\n                   'Content-Type': 'application/json'\r\n                   }})\r\n                  .then(response => {console.log(response.data);\r\n                  if(response.data.status_code==200) { \r\n                    navigate('/', { replace: true });\r\n                    // this.props.history.push({'pathname':'/dashboard',state:this.state});\t\t\t\r\n                  }\r\n                //   else {\r\n                //     navigate('/', { replace: true });\r\n                //   }\r\n                })\r\n                      .catch(error => {\r\n                          // this({ errorMessage: error.message });\r\n                       console.error('There was an error!', error);\r\n                  });\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box mb={3}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Update New Password\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    you can now update your password\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.confirmPassword && errors.confirmPassword)}\r\n                  fullWidth\r\n                  helperText={touched.confirmPassword && errors.confirmPassword}\r\n                  label=\"Confirm Password\"\r\n                  margin=\"normal\"\r\n                  name=\"confirmPassword\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.confirmPassword}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box my={2}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    // disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Update New Password\r\n                  </Button>\r\n                </Box>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default RegisterView;\r\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  image: {\n    marginTop: 50,\n    display: 'inline-block',\n    maxWidth: '100%',\n    width: 560\n  }\n}));\n\nconst NotFoundView = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"404\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"md\">\n          <Typography\n            align=\"center\"\n            color=\"textPrimary\"\n            variant=\"h1\"\n          >\n            404: The page you are looking for isn’t here\n          </Typography>\n          <Typography\n            align=\"center\"\n            color=\"textPrimary\"\n            variant=\"subtitle2\"\n          >\n            You either tried some shady route or you came here by mistake.\n            Whichever it is, try using the navigation\n          </Typography>\n          <Box textAlign=\"center\">\n            <img\n              alt=\"Under development\"\n              className={classes.image}\n              src=\"/static/images/undraw_page_not_found_su7k.svg\"\n            />\n          </Box>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default NotFoundView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  FormControlLabel,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(({\n  root: {},\n  item: {\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}));\n\nconst Notifications = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <form\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"Manage the notifications\"\n          title=\"Notifications\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={6}\n            wrap=\"wrap\"\n          >\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                color=\"textPrimary\"\n                gutterBottom\n                variant=\"h6\"\n              >\n                Notifications\n              </Typography>\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Text Messages\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Phone calls\"\n              />\n            </Grid>\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                color=\"textPrimary\"\n                gutterBottom\n                variant=\"h6\"\n              >\n                Messages\n              </Typography>\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Phone calls\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nNotifications.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Notifications;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(({\n  root: {}\n}));\n\nconst Password = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <form\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"Update password\"\n          title=\"Password\"\n        />\n        <Divider />\n        <CardContent>\n          <TextField\n            fullWidth\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <TextField\n            fullWidth\n            label=\"Confirm password\"\n            margin=\"normal\"\n            name=\"confirm\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.confirm}\n            variant=\"outlined\"\n          />\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Update\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nPassword.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Password;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Notifications from './Notifications';\nimport Password from './Password';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst SettingsView = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Settings\"\n    >\n      <Container maxWidth=\"lg\">\n        <Notifications />\n        <Box mt={3}>\n          <Password />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default SettingsView;\n","import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  Link,\n  TextField,\n  Select,\n  InputLabel,\n  FormControl,\n  NativeSelect,\n  Typography,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper\n} from '@material-ui/core';\nimport FacebookIcon from 'src/icons/Facebook';\nimport GoogleIcon from 'src/icons/Google';\nimport Page from 'src/components/Page';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  table:{\n    minWidth:256\n  }\n}));\n\nlet localData = {};\nconst getLocalData = (localDataKey) => {\n  if (localStorage.getItem(localDataKey) != null) {\n    return JSON.parse(localStorage.getItem(localDataKey));\n  }\n};\n\nconst setLocalData = (localDataKey, localDataValue) => {\n  localStorage.setItem(localDataKey, JSON.stringify(localDataValue));\n  localData = JSON.parse(localStorage.getItem(localDataKey));\n};\n\nconst VehicleList = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  localData = getLocalData(\"loginData\");\n  const [state, setState] = useState({\n    vehicles: []\n  });\n\n  useEffect(() => {\n    async function fetchData() {\n      const result = await axios(\n        'http://localhost:5000/getVehicleList', {\n        // 'https://5111054b0433.ngrok.io/showVehicleData', {\n        method: 'POST',\n        // data: { \"email\": localData.email },\n        data: { \"email\": \"thirumal1206@gmail.com\"},\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n      ).then(response => {\n        console.log(response.data);\n        if (response.data.statusCode == 200) {\n          setState({vehicles: []});\n          setState({vehicles: response.data.data});\n        }\n        else {\n        }\n      })\n        .catch(error => {\n          console.error('There was an error!', error);\n        });\n    }\n    fetchData();\n    console.log(\"Inside Test-->\", state.vehicles);\n\n  }, []);\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"VehiclesList\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n         <Container maxWidth=\"md\">\n          <Box mb={3}>\n          <Typography\n            color=\"primary\"\n            variant=\"h1\"\n          >\n            List of Vehicles in the Profile\n          </Typography>\n          <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  {/* <TableCell algin=\"right\">Parked Date</TableCell> */}\n                  <TableCell >Vehicle License Plate Number</TableCell>\n                  <TableCell >Vehicle Type</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {state.vehicles.map((row) => (\n                  <TableRow key={row.carRegNumber}>\n                    <TableCell component=\"th\" scope=\"row\">{row.carRegNumber}</TableCell>\n                    <TableCell >{row.vehicleType}</TableCell>\n                    {/* <TableCell align=\"right\">{row.ownerShip}</TableCell>\n                    <TableCell align=\"right\">{row.parkingFine}</TableCell>\n                    <TableCell align=\"right\">{row.paymentStatus}</TableCell> */}\n                    {/* <TableCell align=\"right\">{row.protein}</TableCell> */}\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          </Box>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default VehicleList;\n","import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  Checkbox,\n  Link,\n  TextField,\n  Select,\n  InputLabel,\n  FormControl,\n  FormControlLabel,\n  NativeSelect,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport FacebookIcon from 'src/icons/Facebook';\nimport GoogleIcon from 'src/icons/Google';\nimport Page from 'src/components/Page';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nlet localData = {};\nconst getLocalData = (localDataKey) => {\n  if (localStorage.getItem(localDataKey) != null) {\n    return JSON.parse(localStorage.getItem(localDataKey));\n  }\n};\n\nconst setLocalData = (localDataKey, localDataValue) => {\n  localStorage.setItem(localDataKey, JSON.stringify(localDataValue));\n  localData = JSON.parse(localStorage.getItem(localDataKey));\n};\n\nconst AddNewVehicle = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  localData = getLocalData(\"loginData\");\n  const [state, setState] = useState({\n    ownerCheckBox: false,\n    // showSuccessMessage: false,\n    // showErrorMessage:false,\n    vehicleAlreadyAdded:'',\n    // showVehicleAlreadyAddedMessage:false\n  });\n\n  const [ showSuccessMessage, setShowSuccessMessage ] = useState(false);\n  const [ showErrorMessage, setShowErrorMessage ] = useState(false);\n  const [ showVehicleInfo, setShowVehicleInfo ] = useState(false);\n  const [ vehicleInfoMessage, setVehicleInfoMessage ] = useState('');\n  \n  const handleOwnerCheckBoxChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"ActiveTicket\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        // justifyContent=\"center\"\n      >\n        <Container maxWidth=\"lg\">\n          <Formik\n            initialValues={{\n              carRegNumber: '',\n              vehicleType:'temporary',\n              email:localData.email\n              // email:\"thirumal1206@gmail.com\"\n            }}\n            validationSchema={Yup.object().shape({\n              // email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n              carRegNumber: Yup.string().max(255).required('carRegNumber is required')\n\n            })}\n            onSubmit={values => {\n              console.log(\"Test Add new vehcile-->\",state.ownerCheckBox);\n              if (state.ownerCheckBox) {\n                values.vehicleType=\"owner\";\n              }\n              axios(\n                // 'http://localhost:5000/addVehicleData', {\n                'https://5111054b0433.ngrok.io/addVehicleData', {\n                method: 'POST',\n                data: values,\n                // data: { \"email\": \"thirumal1206@gmail.com\"},\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              }\n              ).then(response => {\n                console.log(response.data);\n                if (response.data.statusCode == 200) {\n                  // setState({vehicles: []});\n                  setState({vehicles: response.data.data});\n                  setShowSuccessMessage(true);\n                  setShowErrorMessage(false);\n                  setShowVehicleInfo(false);\n                }\n                else if (response.data.statusCode == 201) {\n                  setShowSuccessMessage(false);\n                  setShowErrorMessage(false);\n                  setShowVehicleInfo(true);\n                  setVehicleInfoMessage(response.data.data.registrationMsg)\n                  // setState({vehicleInfoMessage:response.data.data.registrationMsg});\n                }\n                else {\n                  setShowSuccessMessage(false);\n                  setShowErrorMessage(false);\n                  setShowVehicleInfo(true);\n                  setVehicleInfoMessage(response.data.data.registrationMsg)\n                }\n              })\n                .catch(error => {\n\n                  console.error('There was an error!', error);\n                });\n            }\n            }\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              dirty,\n              isValid,\n              values\n            }) =>\n            (<form onSubmit={handleSubmit}>\n              <Box mb={3}>\n                <Typography\n                  color=\"primary\"\n                  variant=\"h1\"\n                >\n                  Adding New Vehicle to Profile\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    Fields with * are mandatory\n                  </Typography>\n              </Box>\n              <TextField\n                  error={Boolean(touched.vehicleLicensePlateNumber && errors.vehicleLicensePlateNumber)}\n                  // fullWidth\n                  required\n                  helperText={touched.vehicleLicensePlateNumber && errors.vehicleLicensePlateNumber}\n                  label=\"Vehicle reg number\"\n                  margin=\"normal\"\n                  name=\"carRegNumber\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.carRegNumber}\n                  variant=\"outlined\"\n                /> \n                <Box>\n                 <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={state.ownerCheckBox}\n                        // defaultChecked\n                        onChange={handleOwnerCheckBoxChange}\n                        name=\"ownerCheckBox\"\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"Are you the owner of the vehicle?\"\n                  />\n                  </Box>\n                  <Box my={2}>\n                  <Button\n                    color=\"primary\"\n                    // disabled = {!Formik.isValid}\n                    // disabled={isSubmitting || !dirty}\n                    disabled={!(isValid && dirty)}\n                    // fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                    name=\"addVehicleBtn\"\n                  >\n                    Add Vehicle \n                  </Button>\n                </Box>\n                {showSuccessMessage ? <Box my={2}>\n                  <Alert severity=\"success\">\n                    <AlertTitle>Vehicle added to the profile successfully</AlertTitle>\n                    <strong>Please refresh the page to view added vehicle details</strong>\n                  </Alert>\n                </Box> : null}\n                {showVehicleInfo ? <Box my={2}>\n                  <Alert severity=\"info\">\n                    <AlertTitle>Can't add this vehicle</AlertTitle>\n                    <strong>{vehicleInfoMessage}</strong>\n                    <strong> Kindly try with a different number!</strong>\n                  </Alert>\n                </Box> : null}\n                {showErrorMessage ? <Box my={2}>\n                  <Alert severity=\"error\">\n                    <AlertTitle>Something went wrong</AlertTitle>\n                    <strong>We apologize for the incovenience.</strong>\n                    <strong>Kindly try again in sometime!</strong>\n                  </Alert>\n                </Box> : null}\n            </form>)}\n          </Formik>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default AddNewVehicle;\n","import React from 'react';\r\nimport {\r\n    Container,\r\n    Grid,\r\n    makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport VehicleList from './VehicleList';\r\nimport AddNewVehicle from './AddNewVehicle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.dark,\r\n        minHeight: '100%',\r\n        paddingBottom: theme.spacing(3),\r\n        paddingTop: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nlet localData = {};\r\nconst getLocalData = (localDataKey) => {\r\n    if (localStorage.getItem(localDataKey) != null) {\r\n        return JSON.parse(localStorage.getItem(localDataKey));\r\n    }\r\n};\r\nconst setLocalData = (localDataKey, localDataValue) => {\r\n    localStorage.setItem(localDataKey, JSON.stringify(localDataValue));\r\n    localData = JSON.parse(localStorage.getItem(localDataKey));\r\n};\r\n\r\nconst VehiclesView = (state, props) => {\r\n    const classes = useStyles();\r\n    localData = getLocalData(\"loginData\");\r\n    return (\r\n        <Page\r\n            className={classes.root}\r\n            title=\"Dashboard\"\r\n        >\r\n            <Container maxWidth={false}>\r\n                <Grid\r\n                    container\r\n                    spacing={3}\r\n                >\r\n                    <Grid\r\n                        item\r\n                        lg={10}\r\n                        sm={12}\r\n                        xl={10}\r\n                        xs={12}\r\n                    >\r\n                        <VehicleList />\r\n                    </Grid>\r\n                    <Grid\r\n                        item\r\n                        lg={10}\r\n                        sm={12}\r\n                        xl={10}\r\n                        xs={12}\r\n                    >\r\n                        <AddNewVehicle />\r\n                    </Grid>\r\n                    {/* <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <Budget />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TotalCustomers />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TasksProgress />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TotalProfit />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={12}\r\n            xl={9}\r\n            xs={12}\r\n          >\r\n            <Sales />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TrafficByDevice />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <LatestProducts />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={12}\r\n            xl={9}\r\n            xs={12}\r\n          >\r\n            <LatestOrders />\r\n          </Grid> */}\r\n                </Grid>\r\n            </Container>\r\n        </Page>\r\n    );\r\n};\r\n\r\nexport default VehiclesView;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport axios from 'axios';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Radio,\r\n    RadioGroup,\r\n    Container,\r\n    Grid,\r\n    Link,\r\n    TextField,\r\n    Select,\r\n    InputLabel,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormLabel,\r\n    NativeSelect,\r\n    Typography,\r\n    makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.dark,\r\n        height: '100%',\r\n        paddingBottom: theme.spacing(3),\r\n        paddingTop: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nlet localData = {};\r\nconst getLocalData = (localDataKey) => {\r\n    if (localStorage.getItem(localDataKey) != null) {\r\n        return JSON.parse(localStorage.getItem(localDataKey));\r\n    }\r\n};\r\n\r\nconst setLocalData = (localDataKey, localDataValue) => {\r\n    localStorage.setItem(localDataKey, JSON.stringify(localDataValue));\r\n    localData = JSON.parse(localStorage.getItem(localDataKey));\r\n};\r\n\r\nconst PaymentTypes = () => {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n    const [value, setValue] = React.useState('paypal');\r\n\r\n    const handleRadioChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <Page\r\n            className={classes.root}\r\n            title=\"Payment\"\r\n        >\r\n            <Box\r\n                display=\"flex\"\r\n                flexDirection=\"column\"\r\n                height=\"100%\"\r\n                // justifyContent=\"center\"\r\n            >\r\n                <Container maxWidth=\"md\">\r\n                    <Box mb={3}>\r\n                        <Typography\r\n                            color=\"primary\"\r\n                            variant=\"h1\"\r\n                        >\r\n                            Payment Portal\r\n                                </Typography>\r\n                    </Box>\r\n                    <FormControl component=\"fieldset\">\r\n                        <FormLabel component=\"legend\">Select a payment type </FormLabel>\r\n                        <RadioGroup aria-label=\"paymentmode\" name=\"paymentmode\" value={value} onChange={handleRadioChange}>\r\n                            <FormControlLabel value=\"paypal\" control={<Radio />} label=\"Paypal\" />\r\n                            <FormControlLabel value=\"IBAN\" control={<Radio />} label=\"IBAN\" />\r\n                            <FormControlLabel value=\"Debit\" control={<Radio />} label=\"Debit\" />\r\n                            <FormControlLabel value=\"Credit\" control={<Radio />} label=\"Credit\" />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                    <Formik\r\n                        initialValues={{\r\n                            PaypalID: '',\r\n                            password: ''\r\n                        }}\r\n                        validationSchema={Yup.object().shape({\r\n                            PaypalID: Yup.string().email('Must be a valid paypal email id').max(255).required('Paypal ID is required'),\r\n                            password: Yup.string().required(\"Please enter your password\")\r\n                                .matches(\r\n                                    /^.*(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\r\n                                    \"Password must contain at least 8 characters, one uppercase, one number and one special case character\"\r\n                                ),\r\n\r\n                        })}\r\n                        onSubmit={values => {\r\n                        }\r\n                        }\r\n                    >\r\n                        {({\r\n                            errors,\r\n                            handleBlur,\r\n                            handleChange,\r\n                            handleSubmit,\r\n                            isSubmitting,\r\n                            touched,\r\n                            dirty,\r\n                            isValid,\r\n                            values\r\n                        }) =>\r\n                        (<form>\r\n                            <Box mb={2}>\r\n                                <TextField\r\n                                    error={Boolean(touched.PaypalID && errors.PaypalID)}\r\n                                    fullWidth\r\n                                    required\r\n                                    helperText={touched.PaypalID && errors.PaypalID}\r\n                                    label=\"PaypalID\"\r\n                                    margin=\"dense\"\r\n                                    name=\"PaypalID\"\r\n                                    onBlur={handleBlur}\r\n                                    onChange={handleChange}\r\n                                    value={values.PaypalID}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                <TextField\r\n                                    error={Boolean(touched.password && errors.password)}\r\n                                    fullWidth\r\n                                    required\r\n                                    helperText={touched.password && errors.password}\r\n                                    label=\"Password\"\r\n                                    margin=\"normal\"\r\n                                    name=\"password\"\r\n                                    onBlur={handleBlur}\r\n                                    onChange={handleChange}\r\n                                    type=\"password\"\r\n                                    value={values.password}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <Button\r\n                                    color=\"primary\"\r\n                                    disabled={!(isValid && dirty)}\r\n                                    // fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    name=\"payNowBtn\"\r\n                                >\r\n                                    Pay Now\r\n                                </Button>\r\n                            </Box>\r\n                        </form>)}\r\n                    </Formik>\r\n                </Container>\r\n            </Box>\r\n        </Page>\r\n    );\r\n};\r\n\r\nexport default PaymentTypes;\r\n","import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport axios from 'axios';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Radio,\r\n    RadioGroup,\r\n    Container,\r\n    Grid,\r\n    Link,\r\n    TextField,\r\n    Select,\r\n    InputLabel,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormLabel,\r\n    NativeSelect,\r\n    Typography,\r\n    makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.dark,\r\n        height: '100%',\r\n        paddingBottom: theme.spacing(3),\r\n        paddingTop: theme.spacing(3),\r\n        fontStyle: 'italic',\r\n        fontFamily: '-apple-system',\r\n\r\n    }\r\n}));\r\n\r\nlet localData = {};\r\nconst getLocalData = (localDataKey) => {\r\n    if (localStorage.getItem(localDataKey) != null) {\r\n        return JSON.parse(localStorage.getItem(localDataKey));\r\n    }\r\n};\r\n\r\nconst setLocalData = (localDataKey, localDataValue) => {\r\n    localStorage.setItem(localDataKey, JSON.stringify(localDataValue));\r\n    localData = JSON.parse(localStorage.getItem(localDataKey));\r\n};\r\n\r\nconst isTicketAmount = (pendingAmountType) => {\r\n    if (pendingAmountType==\"ticketAmount\") {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nconst isFineAmount = (pendingAmountType) => {\r\n    if (pendingAmountType==\"fineAmount\") {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nconst AmountToPay = () => {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n\r\n    \r\n    // const [value, setValue] = React.useState('');\r\n\r\n    // const handleChange = (event) => {\r\n    //     setValue(event.target.value);\r\n    //     setLocalData(\"amountToPay\", event.target.value);\r\n    //     setLocalData(\"amountType\", \"\")\r\n    // };\r\n\r\n    const [value, setValue] = React.useState('paypal');\r\n\r\n    const handleRadioChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n    localData = getLocalData(\"loginData\");\r\n    const[showPaymentPortal,setShowPaymentPortal] = useState(false);\r\n    const [pendingPayment, setPendingPayment] = useState({\r\n        ticketAmount: '',\r\n        fineAmount: ''\r\n    });\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const result = await axios(\r\n                // 'http://localhost:5000/getPendingPayment', {\r\n                'https://86b934886ba0.ngrok.io/getPendingPayment', {\r\n                method: 'POST',\r\n                data: { \"email\": localData.email },\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n            ).then(response => {\r\n                console.log(response.data);\r\n                if (response.data.statusCode == 200) {\r\n                    // setParkedCarRegNo(response.data.data.ParkedCarRegNo);\r\n                    setPendingPayment(response.data.data);\r\n                }\r\n                else {\r\n                    // this.loginError.display = \"block\"\r\n                }\r\n            })\r\n                .catch(error => {\r\n                    // this({ errorMessage: error.message });\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n        fetchData();\r\n        // setData(result.data);\r\n    }, []);\r\n\r\n    return (\r\n        <Page\r\n            className={classes.root}\r\n            title=\"Payment\"\r\n        >\r\n            <Box\r\n                display=\"flex\"\r\n                flexDirection=\"column\"\r\n                height=\"100%\"\r\n            // justifyContent=\"center\"\r\n            >\r\n                <Container maxWidth=\"md\">\r\n                    <Box mb={3}>\r\n                        <Typography\r\n                            color=\"primary\"\r\n                            variant=\"h3\"\r\n                        >\r\n                            Pending Ticket Amount: {pendingPayment.ticketAmount}\r\n                        </Typography>\r\n                    </Box>\r\n\r\n                    <Box mb={3}>\r\n                        <Typography\r\n                            color=\"primary\"\r\n                            variant=\"h3\"\r\n                        >\r\n                            Pending Fine Amount: {pendingPayment.fineAmount}\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box mb={3}>\r\n                        <Button onClick={() => setShowPaymentPortal(true)}\r\n                                color=\"secondary\"\r\n                                variant=\"body1\"\r\n                                size=\"large\"\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                            >\r\n                                To Payment Portal\r\n                            </Button>\r\n                    </Box>\r\n                </Container>\r\n                {showPaymentPortal ? <Container maxWidth=\"md\">\r\n                    <Page\r\n                        className={classes.root}\r\n                        title=\"Payment\"\r\n                    >\r\n                        <Box\r\n                            display=\"flex\"\r\n                            flexDirection=\"column\"\r\n                            height=\"100%\"\r\n                        // justifyContent=\"center\"\r\n                        >\r\n                            <Container maxWidth=\"md\">\r\n                                <Box mb={3}>\r\n                                    <Typography\r\n                                        color=\"primary\"\r\n                                        variant=\"h1\"\r\n                                    >\r\n                                        Payment Portal\r\n                                </Typography>\r\n                                </Box>\r\n                                <FormControl component=\"fieldset\">\r\n                                    <FormLabel component=\"legend\">Select a payment type </FormLabel>\r\n                                    <RadioGroup aria-label=\"paymentmode\" name=\"paymentmode\" value={value} onChange={handleRadioChange}>\r\n                                        <FormControlLabel value=\"paypal\" control={<Radio />} label=\"Paypal\" />\r\n                                        {/* <FormControlLabel value=\"IBAN\" control={<Radio />} label=\"IBAN\" />\r\n                            <FormControlLabel value=\"Debit\" control={<Radio />} label=\"Debit\" />\r\n                            <FormControlLabel value=\"Credit\" control={<Radio />} label=\"Credit\" /> */}\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                                <Formik\r\n                                    initialValues={{\r\n                                        paypalID: '',\r\n                                        password: '',\r\n                                        amount: '',\r\n                                        pendingAmountType: '',\r\n                                        email:localData.email\r\n                                    }}\r\n                                    validationSchema={Yup.object().shape({\r\n                                        paypalID: Yup.string().email('Must be a valid paypal email id').max(255).required('Paypal ID is required'),\r\n                                        password: Yup.string().required(\"Please enter your password\"),\r\n                                            // .matches(\r\n                                            //     /^.*(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\r\n                                            //     \"Password must contain at least 8 characters, one uppercase, one number and one special case character\"\r\n                                            // ),\r\n                                        pendingAmountType: Yup.string().required(\"Please choose an option\"),\r\n\r\n                                    })}\r\n                                    onSubmit={values => {\r\n                                        if (values.pendingAmountType ==\"ticketAmount\") {\r\n                                            values.amount = pendingPayment.ticketAmount\r\n                                        }\r\n                                        else if (values.pendingAmountType ==\"fineAmount\") {\r\n                                            values.amount = pendingPayment.fineAmount\r\n                                        }\r\n                                        else {\r\n                                            values.amount = \"\"\r\n                                        }\r\n                                        console.log(\"in submit payment-->\", values)\r\n                                    }\r\n                                    }\r\n                                >\r\n                                    {({\r\n                                        errors,\r\n                                        handleBlur,\r\n                                        handleChange,\r\n                                        handleSubmit,\r\n                                        isSubmitting,\r\n                                        touched,\r\n                                        dirty,\r\n                                        isValid,\r\n                                        values\r\n                                    }) =>\r\n                                    (<form onSubmit={handleSubmit}>\r\n                                        <Box mb={2}>\r\n                                            <TextField\r\n                                                error={Boolean(touched.paypalID && errors.paypalID)}\r\n                                                fullWidth\r\n                                                required\r\n                                                helperText={touched.paypalID && errors.paypalID}\r\n                                                label=\"PaypalID\"\r\n                                                margin=\"dense\"\r\n                                                name=\"paypalID\"\r\n                                                onBlur={handleBlur}\r\n                                                onChange={handleChange}\r\n                                                value={values.paypalID}\r\n                                                variant=\"outlined\"\r\n                                            />\r\n                                            <TextField\r\n                                                error={Boolean(touched.password && errors.password)}\r\n                                                fullWidth\r\n                                                required\r\n                                                helperText={touched.password && errors.password}\r\n                                                label=\"Password\"\r\n                                                margin=\"normal\"\r\n                                                name=\"password\"\r\n                                                onBlur={handleBlur}\r\n                                                onChange={handleChange}\r\n                                                type=\"password\"\r\n                                                value={values.password}\r\n                                                variant=\"outlined\"\r\n                                            />\r\n                                        </Box>\r\n\r\n                                        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                            <InputLabel htmlFor=\"outlined-age-native-simple\" required>Choose Amount</InputLabel>\r\n                                            <Select\r\n                                                native\r\n                                                fullWidth\r\n                                                required\r\n                                                value={values.pendingAmountType}\r\n                                                onChange={handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                label=\"PendingAmountType\"\r\n                                                inputProps={{\r\n                                                    name: 'pendingAmountType',\r\n                                                    id: 'outlined-age-native-simple',\r\n                                                }}\r\n                                            >\r\n                                                <option aria-label=\"None\" value=\"\" />\r\n                                                {/* <option key=\"ticketAmount\" value={pendingPayment.ticketAmount}>Pending Ticket Amount</option>\r\n                                                <option key=\"fineAmount\" value={pendingPayment.fineAmount}>Pending Fine Amount</option> */}\r\n                                                <option value=\"ticketAmount\" >Pending Ticket Amount</option>\r\n                                                <option value=\"fineAmount\" >Pending Fine Amount</option>\r\n                                                \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        { isTicketAmount(values.pendingAmountType) ?<TextField\r\n                                            error={Boolean(touched.amount && errors.amount)}\r\n                                            fullWidth\r\n                                            disabled\r\n                                            helperText={touched.amount && errors.amount}\r\n                                            label=\"Amount\"\r\n                                            margin=\"normal\"\r\n                                            name=\"amount\"\r\n                                            onBlur={handleBlur}\r\n                                            onChange={handleChange}\r\n                                            value={pendingPayment.ticketAmount}\r\n                                            variant=\"outlined\"\r\n                                        />:null}\r\n                                        {isFineAmount(values.pendingAmountType) ?<TextField\r\n                                            error={Boolean(touched.amount && errors.amount)}\r\n                                            fullWidth\r\n                                            disabled\r\n                                            helperText={touched.amount && errors.amount}\r\n                                            label=\"Amount\"\r\n                                            margin=\"normal\"\r\n                                            name=\"amount\"\r\n                                            onBlur={handleBlur}\r\n                                            onChange={handleChange}\r\n                                            value={pendingPayment.fineAmount}\r\n                                            variant=\"outlined\"\r\n                                        />:null}\r\n                                        <Box my={2}>\r\n                                            <Button\r\n                                                color=\"primary\"\r\n                                                disabled={!(isValid && dirty)}\r\n                                                // fullWidth\r\n                                                size=\"large\"\r\n                                                type=\"submit\"\r\n                                                variant=\"contained\"\r\n                                                name=\"payNowBtn\"\r\n                                            >\r\n                                                Pay Now\r\n                                </Button>\r\n                                        </Box>\r\n                                    </form>)}\r\n                                </Formik>\r\n                            </Container>\r\n                        </Box>\r\n                    </Page>\r\n                </Container>:null}\r\n            </Box>\r\n        </Page>\r\n    );\r\n};\r\n\r\nexport default AmountToPay;\r\n","import React from 'react';\r\nimport {\r\n    Container,\r\n    Grid,\r\n    makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport PaymentTypes from './PaymentTypes';\r\nimport AmountToPay from './AmountToPay';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.dark,\r\n        minHeight: '100%',\r\n        paddingBottom: theme.spacing(3),\r\n        paddingTop: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nlet localData = {};\r\nconst getLocalData = (localDataKey) => {\r\n    if (localStorage.getItem(localDataKey) != null) {\r\n        return JSON.parse(localStorage.getItem(localDataKey));\r\n    }\r\n};\r\nconst setLocalData = (localDataKey, localDataValue) => {\r\n    localStorage.setItem(localDataKey, JSON.stringify(localDataValue));\r\n    localData = JSON.parse(localStorage.getItem(localDataKey));\r\n};\r\n\r\nconst PaymentView = (state, props) => {\r\n    const classes = useStyles();\r\n    localData = getLocalData(\"loginData\");\r\n    return (\r\n        <Page\r\n            className={classes.root}\r\n            title=\"Dashboard\"\r\n        >\r\n            <Container maxWidth={false}>\r\n                <Grid\r\n                    container\r\n                    spacing={3}\r\n                >\r\n                  <Grid\r\n                        item\r\n                        lg={10}\r\n                        sm={10}\r\n                        xl={10}\r\n                        xs={12}\r\n                    >\r\n                    <AmountToPay/>\r\n                    </Grid>\r\n                    {/* <Grid\r\n                        item\r\n                        lg={5}\r\n                        sm={10}\r\n                        xl={5}\r\n                        xs={12}\r\n                    >\r\n                    <PaymentTypes/>\r\n                    </Grid> */}\r\n                    \r\n                </Grid>\r\n            </Container>\r\n        </Page>\r\n    );\r\n};\r\n\r\nexport default PaymentView;\r\n","import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  Link,\n  TextField,\n  Select,\n  InputLabel,\n  FormControl,\n  NativeSelect,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nlet localData = {};\nconst getLocalData = (localDataKey) => {\n  if (localStorage.getItem(localDataKey) != null) {\n    return JSON.parse(localStorage.getItem(localDataKey));\n  }\n};\n\nconst setLocalData = (localDataKey, localDataValue) => {\n  localStorage.setItem(localDataKey, JSON.stringify(localDataValue));\n  localData = JSON.parse(localStorage.getItem(localDataKey));\n};\n\nconst buildOptions = () => {\n  var arr = [];\n\n  for (let i = 2; i <= 24; i++) {\n    arr.push(<option key={i} value={i*60}>{i}{\" hours\"}</option>)\n  }\n\n  return arr;\n};\n\nfunction ActiveTicket() {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  localData = getLocalData(\"loginData\");\n  const [state, setState] = React.useState({\n    activeTicketCount:1,\n    rows:[]\n  });\n  // const [ParkedCarRegNo, setParkedCarRegNo] = useState('');\n  const [activeTicketData, setActiveTicketData] = useState({\n    parkedCarRegNo: '',\n    // parkingEndDate: '',\n    parkingFare: '',\n    parkingLocation: '',\n    parkingStartDate: '',\n    remainingParkingDuration: ''\n  });\n  const [showActiveWindow, setShowActiveWindow] = useState(false);\n  const [showNoActiveWindow, setShowNoActiveWindow] = useState(true);\n  const [showExtensionOption, setShowExtensionOption] = useState(false);\n  // const [extendParkingTime, setExtendParkingTime] = useState('');\n  useEffect(() => {\n    async function fetchData() {\n      const result = await axios(\n        // 'http://localhost:5000/getActiveTicket', {\n        'https://86b934886ba0.ngrok.io/viewTicketUser', {\n        method: 'POST',\n        data: { \"email\": localData.email },\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n      ).then(response => {\n        console.log(response.data);\n        if (response.data.statusCode == 200) {\n          // setParkedCarRegNo(response.data.data.ParkedCarRegNo);\n          setState({activeTicketCount:response.data.data.length});\n          setActiveTicketData(response.data.data);\n          setShowActiveWindow(true);\n          setShowNoActiveWindow(false);\n        }\n        else {\n          // this.loginError.display = \"block\"\n        }\n      })\n        .catch(error => {\n          // this({ errorMessage: error.message });\n          console.error('There was an error!', error);\n        });\n    }\n    fetchData();\n    // setData(result.data);\n  }, []);\n\n  return (\n[...Array(state.activeTicketCount)].map((elementInArray, index) =>(\n  <div className=\"\" key={index}>\n    <Page\n      className={classes.root}\n      title=\"ActiveTicket\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"top\"\n      >\n        <Box mb={3}>\n          <Typography\n            color=\"primary\"\n            variant=\"h1\"\n          >\n            Active Parking Ticket {index+1}\n                  </Typography>\n        </Box>\n        {showNoActiveWindow ? <Container maxWidth=\"sm\">\n          <Typography\n            color=\"textPrimary\"\n            variant=\"body1\"\n          >\n            Currently no active tickets found\n          </Typography>\n        </Container> : null}\n        {showActiveWindow ? <Container maxWidth=\"sm\">\n          \n          <Box mb={3}>\n          <Typography\n              color=\"textPrimary\"\n              variant=\"body1\"\n            >\n              Parking Location : {activeTicketData[index].parkingLocation}\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"body1\"\n            >\n              Parking Vehicle Number : {activeTicketData[index].parkedCarRegNo}\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"body1\"\n            >\n              Parking Start Time : {activeTicketData[index].parkingStartDate}\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"body1\"\n            >\n             Notification Email : {activeTicketData[index].parkingEmail}\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"body1\"\n            >\n              Remaining Parking Duration : {activeTicketData[index].remainingParkingDuration}\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"body1\"\n            >\n              Parking Fare Incurred : {activeTicketData[index].parkingFare}\n            </Typography>\n            </Box>\n            <Box mb={3}>\n            <Button onClick={() => { setShowExtensionOption(true) }}\n              color=\"secondary\"\n              variant=\"body1\"\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Extend Ticket\n            </Button>\n            </Box>\n          {/* </Box> */}\n        </Container> : null}\n        {showExtensionOption ? <Box mb={3}>\n          <Container maxWidth=\"lg\">\n            <Formik\n              initialValues={{\n                timeToExtend: ''\n              }}\n              validationSchema={Yup.object().shape({\n                timeToExtend: Yup.string().required('Choose a parking duration')\n              })}\n              onSubmit={values => {\n                axios(\n                  // 'http://localhost:5000/extendActiveParking', {\n                    'https://86b934886ba0.ngrok.io/extendTicket', {\n                  method: 'POST',\n                  data: { \"email\": localData.email, \"parkingEmail\":activeTicketData[index].parkingEmail, \"parkedCarRegNo\":activeTicketData[index].parkedCarRegNo,\"timeToExtend\": values.timeToExtend },\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                }\n                ).then(response => {\n                  console.log(response.data);\n                  if (response.data.statusCode == 200) {\n                    navigate(\"/app/parkingTicket\");\n                    // setParkedCarRegNo(response.data.data.ParkedCarRegNo);\n                    // setActiveTicketData(response.data.data);\n                    // setShowActiveWindow(true);\n                    // setShowNoActiveWindow(false);\n                    // setShowExtensionOption(false);\n                  }\n                  else {\n                    // this.loginError.display = \"block\"\n                  }\n                })\n                  .catch(error => {\n                    // this({ errorMessage: error.message });\n                    console.error('There was an error!', error);\n                  });\n              }\n                // extendParkTime();\n                // setActiveTicketData({ParkedCarRegNo: 'DE 1235'});\n              }\n            >\n              {({\n                errors,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                isSubmitting,\n                touched,\n                dirty,\n                isValid,\n                values\n              }) => (\n\n                <form onSubmit={handleSubmit}>\n                  <Box mb={3}>\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                      <InputLabel htmlFor=\"outlined-age-native-simple\">Parking Duration</InputLabel>\n                      <Select\n                        native\n                        fullWidth\n                        required\n                        value={values.timeToExtend}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        label=\"Parking Time Duration\"\n                        inputProps={{\n                          name: 'timeToExtend',\n                          id: 'outlined-age-native-simple',\n                        }}\n                      >\n                        <option aria-label=\"None\" value=\"\" />\n                        <option value={0.5*60}>30 mins</option>\n                        <option value={1*60}>1 hour</option>\n                        {buildOptions()}\n                      </Select>\n                    </FormControl>\n                    </Box>\n                    <Box mb={3}>\n                    <Button\n                      color=\"primary\"\n                      // disabled = {!Formik.isValid}\n                      // disabled={isSubmitting || !dirty}\n                      disabled={!(isValid && dirty) ||isSubmitting}\n                      // fullWidth\n                      size=\"large\"\n                      type=\"submit\"\n                      variant=\"contained\"\n                      name=\"extendTicketBtn\"\n\n                    >\n                      Confirm\n                  </Button>\n                  </Box>\n                  \n                </form>\n              )}\n            </Formik>\n          </Container>\n        </Box> : null}\n      </Box>\n    </Page >\n    </div>\n  )));\n};\n\nexport default ActiveTicket;\n","import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Container,\n  Grid,\n  Link,\n  TextField,\n  Select,\n  InputLabel,\n  FormControl,\n  FormControlLabel,\n  NativeSelect,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport FacebookIcon from 'src/icons/Facebook';\nimport GoogleIcon from 'src/icons/Google';\nimport Page from 'src/components/Page';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(2),\n    paddingTop: theme.spacing(2)\n  },\n  formControl: {\n    // margin: theme.spacing(3),\n    paddingBottom: theme.spacing(2),\n    paddingTop: theme.spacing(2),\n    height: '100%',\n    minWidth: 256,\n  },\n}));\n\nlet localData = {};\nconst getLocalData = (localDataKey) => {\n  if (localStorage.getItem(localDataKey) != null) {\n    return JSON.parse(localStorage.getItem(localDataKey));\n  }\n};\n\nconst setLocalData = (localDataKey, localDataValue) => {\n  localStorage.setItem(localDataKey, JSON.stringify(localDataValue));\n  localData = JSON.parse(localStorage.getItem(localDataKey));\n};\n\nconst buildOptions = () => {\n  var arr = [];\n  for (let i = 2; i <= 24; i++) {\n    arr.push(<option key={i} value={i * 60}>{i}{\" hours\"}</option>)\n  }\n  return arr;\n};\n\nconst BuyParkingTicket = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  localData = getLocalData(\"loginData\");\n  const [state, setState] = useState({\n    // showTicket: false,\n    // showInfoMessage: false,\n    // showTicketError: false,\n    // ticketInfo: '',\n    // showTempText: false,\n    vehicles: [],\n  });\n\n  const [showTicket, setShowTicket] = useState(false);\n  const [showTicketInfo, setShowTicketInfo] = useState(false);\n  const [showTicketError, setShowTicketError] = useState(false);\n  const [ticketInfoMessage, setTicketInfoMessage] = useState('');\n  const [showTempText, setShowTempText] = useState(false);\n\n  const handleEmailCBChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  useEffect(() => {\n    async function fetchVehicles() {\n      const result = await axios(\n        'http://localhost:5000/getVehicleList', {\n          // 'https://86b934886ba0.ngrok.io/showVehicleData', {\n        method: 'POST',\n        data: { \"email\": localData.email },\n        // data: { \"email\": \"thirumal1206@gmail.com\"},\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n      ).then(response => {\n        console.log(response.data);\n        if (response.data.statusCode == 200) {\n          // setState({vehicles: []});\n          setState({ vehicles: response.data.data });\n        }\n        else {\n        }\n      })\n        .catch(error => {\n          console.error('There was an error!', error);\n        });\n    }\n    fetchVehicles();\n\n  }, []);\n\n  const vehiclesInProfile = () => {\n    var vehiclesRegNoList = [];\n    if (state.vehicles) {\n      for (let i = 0; i < state.vehicles.length; i++) {\n        vehiclesRegNoList.push(<option key={i} value={state.vehicles[i].carRegNumber}>{state.vehicles[i].carRegNumber}</option>)\n      }\n    }\n    return vehiclesRegNoList;\n  };\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"BuyParkingTicket\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n      // justifyContent=\"top\"\n      >\n        <Container maxWidth=\"lg\">\n          <Formik\n            initialValues={{\n              parkedLocation: '',\n              parkedCarRegNo: '',\n              parkingDuration: 0,\n              email: '',\n              parkingEmail: '',\n              emailCheckBox: true\n            }}\n            validationSchema={Yup.object().shape({\n              parkedLocation: Yup.string().max(255).required('Enter a valid location'),\n              parkedCarRegNo: Yup.string().max(10).required('Enter a valid vehicle license plate number'),\n              parkingDuration: Yup.string().required('Choose a parking duration'),\n              parkingEmail: Yup.string().email(),\n            })}\n            onSubmit={values => {\n              console.log(values);\n              values.email = localData.email;\n              if (values.parkingEmail == '') {\n                values.parkingEmail = localData.email;\n              }\n              // axios('http://localhost:5000/buyParkingTicket', {\n                axios(' https://86b934886ba0.ngrok.io/buyticket', {\n                method: 'POST',\n                data: values,\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              }).then(response => {\n                console.log(response.data.data);\n                if (response.data.statusCode == 200) {\n                  setShowTicket(true);\n                  setShowTicketInfo(false);\n                  setShowTicketError(false);\n                }\n                else if (response.data.statusCode == 201) {\n                  // state.showInfoMessage = true;\n                  // state.ticketInfo = response.data.statusDesc;\n                  setShowTicket(false);\n                  setShowTicketInfo(true);\n                  setTicketInfoMessage(response.data.statusDesc);\n                  setShowTicketError(false);\n                }\n                else {\n                  setShowTicket(false);\n                  setShowTicketInfo(false);\n                  setShowTicketError(true);\n                }\n              }).catch(error => {\n                setShowTicket(false);\n                setShowTicketInfo(false);\n                setShowTicketError(true);\n                console.error('There was an error!', error);\n              });\n              // navigate(\"/app/parkingTicket/viewTicket\", { replace: false })\n            }\n            }\n            onChange={values => {\n              // setState({ ...state, [event.target.name]: event.target.checked });\n              values.emailCheckBox = false\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              dirty,\n              isValid,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box mb={3}>\n                  <Typography\n                    color=\"primary\"\n                    variant=\"h1\"\n                  >\n                    Buy New Parking Ticket\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    Fields with * are mandatory\n                  </Typography>\n                </Box>\n                <Box mb={3}>\n                  <TextField\n                    error={Boolean(touched.parkedLocation && errors.parkedLocation)}\n                    fullWidth\n                    required\n                    helperText={touched.parkedLocation && errors.parkedLocation}\n                    label=\"Parking Location\"\n                    margin=\"normal\"\n                    name=\"parkedLocation\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.parkedLocation}\n                    variant=\"outlined\"\n                  />\n                </Box>\n                <Box mb={3}>\n                  <FormControl variant=\"outlined\" className={classes.formControl}>\n                    <InputLabel htmlFor=\"outlined-age-native-simple\">Choose vehicle</InputLabel>\n                    <Select\n                      native\n                      fullWidth\n                      required\n                      variant=\"outlined\"\n                      value={values.parkedCarRegNo}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      label=\"Select vehicle\"\n                      inputProps={{\n                        name: 'parkedCarRegNo',\n                        id: 'outlined-age-native-simple',\n                      }}\n                    >\n                      <option aria-label=\"None\" value=\"\" />\n                      {vehiclesInProfile()}\n                    </Select>\n                    <Typography\n                      color=\"textSecondary\"\n                      variant=\"body1\"\n                    >\n                      <Link\n                        component={RouterLink}\n                        to=\"/app/vehicles\"\n                        variant=\"h6\"\n                      >\n                        Want to add a new vehicle, click here?\n                  </Link>\n                    </Typography>\n                  </FormControl>\n                </Box>\n                {/* {state.showTempText ? <TextField\n                  error={Boolean(touched.parkedCarRegNo && errors.parkedCarRegNo)}\n                  fullWidth\n                  required\n                  helperText={touched.parkedCarRegNo && errors.parkedCarRegNo}\n                  label=\"Parking Car Registration Number\"\n                  margin=\"normal\"\n                  name=\"parkedCarRegNo\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.parkedCarRegNo}\n                  variant=\"outlined\"\n                /> :null} */}\n                <Box mb={3}>\n                  <FormControl variant=\"outlined\" className={classes.formControl}>\n                    <InputLabel htmlFor=\"outlined-age-native-simple\">Parking Duration</InputLabel>\n                    <Select\n                      native\n                      fullWidth\n                      required\n                      value={values.parkingDuration}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      label=\"Parking Time Duration\"\n                      inputProps={{\n                        name: 'parkingDuration',\n                        id: 'outlined-age-native-simple',\n                      }}\n                    >\n                      <option aria-label=\"None\" value=\"\" />\n                      <option value={30}>30 mins</option>\n                      <option value={60}>1 hour</option>\n                      {buildOptions()}\n                    </Select>\n                  </FormControl>\n                </Box>\n                <Box my={2}>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={values.emailCheckBox}\n                        defaultChecked\n                        onChange={handleChange}\n                        name=\"emailCheckBox\"\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"Use logged in user email for notifications\"\n                  />\n                </Box>\n                {!values.emailCheckBox ? <Box mb={2}>\n                  <TextField\n                    error={Boolean(touched.parkingEmail && errors.parkingEmail)}\n                    fullWidth\n                    helperText={touched.parkingEmail && errors.parkingEmail}\n                    label=\"Email Address for Notification\"\n                    margin=\"normal\"\n                    name=\"parkingEmail\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"email\"\n                    value={values.parkingEmail}\n                    variant=\"outlined\"\n                  />\n                </Box> : null}\n                <Box my={2}>\n                  <Button\n                    color=\"primary\"\n                    // disabled = {!Formik.isValid}\n                    // disabled={isSubmitting || !dirty}\n                    disabled={!(isValid && dirty)}\n                    // fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                    name=\"buyTicketBtn\"\n                  >\n                    Buy Ticket\n                  </Button>\n                </Box>\n                {showTicket ? <Box my={2}>\n                  <Alert severity=\"success\">\n                    <AlertTitle>Parking Ticket is successfully taken</AlertTitle>\n                    <strong>Please refresh the page to view ticket details</strong>\n                  </Alert>\n                </Box> : null}\n                {showTicketInfo ? <Box my={2}>\n                  <Alert severity=\"info\">\n                    <AlertTitle>Wrong Info</AlertTitle>\n                    <strong>{ticketInfoMessage}</strong>\n                    <strong>choosen vehicle number is having an active ticket</strong>\n                  </Alert>\n                </Box> : null}\n                {showTicketError ? <Box my={2}>\n                  <Alert severity=\"error\">\n                    <AlertTitle>Something went wrong</AlertTitle>\n                    <strong>We apologize for the incovenience.</strong>\n                    <strong>Kindly try again in sometime!</strong>\n                  </Alert>\n                </Box> : null}\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </Page >\n  );\n};\n\nexport default BuyParkingTicket;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport ActiveTicket from './ActiveTicket';\nimport BuyParkingTicket from './BuyParkingTicket';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nlet localData= {};\nconst getLocalData = (localDataKey) => {\n  if (localStorage.getItem(localDataKey) != null){\n    return JSON.parse(localStorage.getItem(localDataKey));\n  }\n};\nconst setLocalData = (localDataKey,localDataValue) => {\n    localStorage.setItem(localDataKey, JSON.stringify(localDataValue));\n    localData = JSON.parse(localStorage.getItem(localDataKey));\n};\n\nconst ParkingTicket = (state,props) => {\n  const classes = useStyles();\n  localData = getLocalData(\"loginData\");\n  \n  return (\n    <Page\n      className={classes.root}\n      title=\"Dashboard\"\n    >\n      <Container maxWidth={false}>\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={5}\n            sm={10}\n            xl={5}\n            xs={12}\n          >\n            <ActiveTicket />\n          </Grid>\n          <Grid\n            item\n            lg={5}\n            sm={10}\n            xl={5}\n            xs={12}\n          >\n            <BuyParkingTicket />\n          </Grid>\n          {/* <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <Budget />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <TotalCustomers />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <TasksProgress />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <TotalProfit />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={12}\n            xl={9}\n            xs={12}\n          >\n            <Sales />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            md={6}\n            xl={3}\n            xs={12}\n          >\n            <TrafficByDevice />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            md={6}\n            xl={3}\n            xs={12}\n          >\n            <LatestProducts />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={12}\n            xl={9}\n            xs={12}\n          >\n            <LatestOrders />\n          </Grid> */}\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default ParkingTicket;\n","import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  Link,\n  TextField,\n  Select,\n  InputLabel,\n  FormControl,\n  NativeSelect,\n  Typography,\n  makeStyles, Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  table: {\n    minWidth :256\n  }\n}));\n\nlet localData = {};\nconst getLocalData = (localDataKey) => {\n  if (localStorage.getItem(localDataKey) != null) {\n    return JSON.parse(localStorage.getItem(localDataKey));\n  }\n};\n\nconst setLocalData = (localDataKey, localDataValue) => {\n  localStorage.setItem(localDataKey, JSON.stringify(localDataValue));\n  localData = JSON.parse(localStorage.getItem(localDataKey));\n};\n\nconst buildOptions = () => {\n  var arr = [];\n\n  for (let i = 2; i <= 24; i++) {\n    arr.push(<option key={i} value={i * 60}>{i}{\" hours\"}</option>)\n  }\n\n  return arr;\n};\n\nfunction TicketHistory() {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  localData = getLocalData(\"loginData\");\n  // const [state, setState] = React.useState({\n  //   activeTicketCount:1\n  // });\n  const [state, setState] = React.useState({\n    oldTicketCount: 0,\n    rows: []\n  });\n  // const [ParkedCarRegNo, setParkedCarRegNo] = useState('');\n  const [oldTicketData, setOldTicketData] = useState({\n    parkedCarRegNo: '',\n    parkingEndDate: '',\n    parkingFare: '',\n    parkingLocation: '',\n    parkingStartDate: '',\n    remainingParkingDuration: '',\n    notificationEmail: ''\n  });\n  const [showActiveWindow, setShowActiveWindow] = useState(false);\n  const [showNoActiveWindow, setShowNoActiveWindow] = useState(true);\n  const [showExtensionOption, setShowExtensionOption] = useState(false);\n  // const [extendParkingTime, setExtendParkingTime] = useState('');\n  useEffect(() => {\n    async function fetchData() {\n      const result = await axios(\n        'http://localhost:5000/getActiveTicket', {\n        // 'https://86b934886ba0.ngrok.io/getTicketHistory', {\n        method: 'POST',\n        data: { \"email\": localData.email },\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n      ).then(response => {\n        console.log(response.data);\n        if (response.data.statusCode == 200) {\n          // setParkedCarRegNo(response.data.data.ParkedCarRegNo);\n          setState({ activeTicketCount: response.data.data.length });\n          setOldTicketData(response.data.data);\n          setShowActiveWindow(true);\n          setShowNoActiveWindow(false);\n        }\n        else {\n          // this.loginError.display = \"block\"\n        }\n      })\n        .catch(error => {\n          // this({ errorMessage: error.message });\n          console.error('There was an error!', error);\n        });\n    }\n    fetchData();\n    // setData(result.data);\n  }, []);\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Ticket Histrory\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        // justifyContent=\"center\"\n      >\n        <Container maxWidth=\"lg\">\n          <Box mb={3}>\n            <Typography\n              color=\"primary\"\n              variant=\"h1\"\n            >\n              Old Ticket History\n                  </Typography>\n          </Box>\n          {showNoActiveWindow ? <Container maxWidth=\"sm\">\n            <Typography\n              color=\"textPrimary\"\n              variant=\"body1\"\n            >\n              Currently no tickets found in history\n          </Typography>\n          </Container> : null}\n          {showActiveWindow ?\n            <TableContainer component={Paper}>\n              <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell algin=\"right\">Parked Location</TableCell>\n                    <TableCell align=\"right\">Parked Vehicle Number</TableCell>\n                    <TableCell align=\"right\">Parking Start Time</TableCell>\n                    <TableCell align=\"right\">Parking End Time</TableCell>\n                    <TableCell align=\"right\">Notification Email</TableCell>\n                    <TableCell align=\"right\">Parking Fare</TableCell>\n                    <TableCell align=\"right\">Payment Status</TableCell>\n                    {/* <TableCell align=\"right\">Protein&nbsp;(g)</TableCell> */}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {oldTicketData.map((row,index) => (\n                    <TableRow key={index}>\n                      <TableCell algin=\"right\" component=\"th\" scope=\"row\">{row.parkingLocation}</TableCell>\n                      <TableCell align=\"right\">{row.parkedCarRegNo}</TableCell>\n                      <TableCell align=\"right\">{row.parkingStartDate}</TableCell>\n                      <TableCell align=\"right\">{row.parkingEndDate}</TableCell>\n                      <TableCell align=\"right\">{row.parkingEmail}</TableCell>\n                      <TableCell align=\"right\">{row.parkingFare}</TableCell>\n                      <TableCell align=\"right\">{row.paymentStatus}</TableCell>\n                      {/* <TableCell align=\"right\">{row.protein}</TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            : null}\n        </Container>\n      </Box>\n    </Page >\n    // </div>\n    // )));\n  );\n};\n\nexport default TicketHistory;\n","import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport axios from 'axios';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n  NativeSelect,\r\n  Typography,\r\n  makeStyles,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n}));\r\n\r\nlet localData = {};\r\nconst getLocalData = (localDataKey) => {\r\n  if (localStorage.getItem(localDataKey) != null) {\r\n    return JSON.parse(localStorage.getItem(localDataKey));\r\n  }\r\n};\r\n\r\nconst setLocalData = (localDataKey, localDataValue) => {\r\n  localStorage.setItem(localDataKey, JSON.stringify(localDataValue));\r\n  localData = JSON.parse(localStorage.getItem(localDataKey));\r\n};\r\n\r\nconst Fines = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  localData = getLocalData(\"loginData\");\r\n  const [state, setState] = useState({\r\n    finesData: []\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const result = await axios(\r\n        'http://localhost:5000/viewFines', {\r\n        // 'https://d88390afeebf.ngrok.io/viewFinesUser', {\r\n        method: 'POST',\r\n        data: { \"email\": localData.email },\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n      ).then(response => {\r\n        console.log(response.data);\r\n        if (response.data.statusCode == 200) {\r\n          setState({ finesData: response.data.data });\r\n        }\r\n        else {\r\n        }\r\n      })\r\n        .catch(error => {\r\n          console.error('There was an error!', error);\r\n        });\r\n    }\r\n    fetchData();\r\n    console.log(\"Inside Test-->\", state.finesData);\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Fines\"\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n         <Container maxWidth=\"md\">\r\n          <Box mb={3}>\r\n          <Typography\r\n            color=\"primary\"\r\n            variant=\"h1\"\r\n          >\r\n            List of fines received\r\n          </Typography>\r\n          <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell >Parked Date</TableCell>\r\n                  <TableCell >Parked Car No</TableCell>\r\n                  <TableCell >Parking Fine</TableCell>\r\n                  <TableCell >Payment Status</TableCell>\r\n                  {/* <TableCell align=\"right\">Protein&nbsp;(g)</TableCell> */}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {state.finesData.map((row) => (\r\n                  <TableRow key={row.fineDate}>\r\n                    <TableCell component=\"th\" scope=\"row\">{row.fineDate}</TableCell>\r\n                    <TableCell >{row.carRegistrationNo}</TableCell>\r\n                    <TableCell >{row.parkingFine}</TableCell>\r\n                    <TableCell >{row.paidStatus}</TableCell>\r\n                    {/* <TableCell align=\"right\">{row.protein}</TableCell> */}\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Fines;\r\n","import React from 'react';\r\nimport {\r\n    Container,\r\n    Grid,\r\n    makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport Fines from './Fines';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.dark,\r\n        minHeight: '100%',\r\n        paddingBottom: theme.spacing(3),\r\n        paddingTop: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nlet localData = {};\r\nconst getLocalData = (localDataKey) => {\r\n    if (localStorage.getItem(localDataKey) != null) {\r\n        return JSON.parse(localStorage.getItem(localDataKey));\r\n    }\r\n};\r\nconst setLocalData = (localDataKey, localDataValue) => {\r\n    localStorage.setItem(localDataKey, JSON.stringify(localDataValue));\r\n    localData = JSON.parse(localStorage.getItem(localDataKey));\r\n};\r\n\r\nconst FinesView = (state, props) => {\r\n    const classes = useStyles();\r\n    localData = getLocalData(\"loginData\");\r\n    return (\r\n        <Page\r\n            className={classes.root}\r\n            title=\"Dashboard\"\r\n        >\r\n          <Fines/>\r\n        </Page>\r\n    );\r\n};\r\n\r\nexport default FinesView;\r\n","import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  Link,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport FacebookIcon from 'src/icons/Facebook';\nimport GoogleIcon from 'src/icons/Google';\nimport Page from 'src/components/Page';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\nconst loginErrorText = ({\n  loginError:{\n    display:'none'\n  }\n});\nlet localData= {};\nconst getLocalData = (localDataKey) => {\n  if (localStorage.getItem(localDataKey) != null){\n    localData = JSON.parse(localStorage.getItem(localDataKey));\n    return localData;\n  }\n};\nconst setLocalData = (localDataKey,localDataValue) => {\n    localStorage.setItem(localDataKey, JSON.stringify(localDataValue));\n    localData = JSON.parse(localStorage.getItem(localDataKey));\n};\nconst CheckerLoginView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const [showLoginError, setShowLoginError] = useState(false);\n  // const verfiyLogin = verifyLogin();\n  return (\n    <Page\n      className={classes.root}\n      title=\"Login\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              empId: '',\n              password: ''\n            }}\n            validationSchema={Yup.object().shape({\n              // empId: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n              empId: Yup.number().min(6).required('Employee Id is required'),\n              password: Yup.string().required(\"Please enter your password\")\n              .matches(\n                /^.*(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\n                \"Password must contain at least 8 characters, one uppercase, one number and one special case character\"\n              )\n            })}\n            onSubmit={values => \n              {\n                console.log(values);\n                axios('http://localhost:5000/checkerlogin', {\n                  // axios('https://55669f0a7b0d.ngrok.io/loginvalid',{\n                  method: 'POST',\n                  data : values,\n                  headers: {\n                   'Content-Type': 'application/json',\n                   'Accept':'application/json'\n                   }})\n                  .then(response => {console.log(response.data);\n                  if(response.data.data.authentication) { \n                      setLocalData(\"loginData\", response.data.data);\n                      console.log(\"Login Page after api call--->\",localData);\n                      navigate('/app/internal/home');\n                  }\n                  else {\n                    setShowLoginError(true);\n                    console.log(values)\n                  }\n                })\n                      .catch(error => {\n                          // this({ errorMessage: error.message });\n                       console.error('There was an error!', error);\n                  });\n              // }\n            \n            }\n          }\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box mb={3}>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h1\"\n                  >\n                    Internal User Sign In\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    Sign in with your employee id and password\n                  </Typography>\n                </Box>\n                <TextField\n                  error={Boolean(touched.empId && errors.empId)}\n                  fullWidth\n                  helperText={touched.empId && errors.empId}\n                  label=\"Employee Id\"\n                  margin=\"normal\"\n                  name=\"empId\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  // type=\"email\"\n                  type=\"number\"\n                  value={values.empId}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                <Box my={2}>\n                  <Button\n                    color=\"primary\"\n                    // disabled={isSubmitting}\n                    // fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                    name=\"signInBtn\"\n                    \n                  >\n                    Sign in now\n                  </Button>\n                </Box>\n                \n                {showLoginError ? <Container maxWidth=\"sm\">\n                <div className = \"loginError\">\n                  <Alert severity=\"error\">\n                    <AlertTitle>Invalid Login</AlertTitle>\n                    <strong> Employee ID or password is wrong</strong>\n                  </Alert>\n                </div>\n                </Container> : null}\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default CheckerLoginView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport Applogo from \"src/images/quick-e-park-logo.jpg\"\nimport {\n  Avatar,\n  Box,\n  Button,\n  IconButton,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\n\nconst user = {\n  avatar: {Applogo},\n  fullName: '',\n  empId:''\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      justifyContent:\"center\"\n    },\n  },\n  input: {\n    display: 'none',\n  },\n  avatar: {\n    height: 100,\n    width: 100\n  }\n}));\n\nlet localData= {};\nconst getLocalData = (localDataKey) => {\n  if (localStorage.getItem(localDataKey) != null){\n    return JSON.parse(localStorage.getItem(localDataKey));\n  }\n};\nconst setLocalData = (localDataKey,localDataValue) => {\n    localStorage.setItem(localDataKey, JSON.stringify(localDataValue));\n    localData = JSON.parse(localStorage.getItem(localDataKey));\n};\n\nconst Profile = ({ className, ...rest }) => {\n  const classes = useStyles();\n  localData = getLocalData(\"loginData\");\n  user.firstName = localData.firstName\n  user.empId = localData.empId\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Box\n          alignItems=\"center\"\n          display=\"flex\"\n          flexDirection=\"column\"\n        >\n          <Avatar\n            className={classes.avatar}\n            src={user.avatar}\n          />\n          <Typography\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            {user.firstName}\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h4\"\n          >\n            Employee Id {user.empId}\n          </Typography>\n        </Box>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <div className={classes.root}>\n      <input\n        accept=\"image/*\"\n        className={classes.input}\n        id=\"contained-button-file\"\n        multiple\n        type=\"file\"\n      />\n      <label htmlFor=\"contained-button-file\">\n        <Button variant=\"contained\" color=\"primary\" component=\"span\">\n          Upload\n        </Button>\n      </label>\n      <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" />\n    </div>\n      </CardActions>\n    </Card>\n  );\n};\n\nProfile.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Profile;\n","import React, { useEffect, useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport Page from 'src/components/Page';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField,\n  makeStyles,\n  Container,\n  Link,\n  Typography\n} from '@material-ui/core';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nlet localData = {};\nconst getLocalData = (localDataKey) => {\n  if (localStorage.getItem(localDataKey) != null) {\n    return JSON.parse(localStorage.getItem(localDataKey));\n  }\n};\nconst setLocalData = (localDataKey, localDataValue) => {\n  localStorage.setItem(localDataKey, JSON.stringify(localDataValue));\n  localData = JSON.parse(localStorage.getItem(localDataKey));\n};\nconst ProfileDetails = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  localData = getLocalData(\"loginData\");\n\n  const [showUpdateError, setShowUpdateError] = useState(false);\n  const [showUpdateMessage, setShowUpdateMessage] = useState(false);\n  const [message, setMessage] = useState('');\n  return (\n    <Page\n      className={classes.root}\n      title=\"Login\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n      // justifyContent=\"center\"\n      >\n        <Container maxWidth=\"lg\">\n          <Formik\n            initialValues={{\n              firstName: localData.firstName,\n              lastName: localData.lastName,\n              licenseNumber: localData.licenseNumber,\n              // email: localData.email,\n              email:\"thirumal1206@gmail.com\",\n              mobileNumber: localData.mobileNumber\n            }}\n            validationSchema={Yup.object().shape({\n              // email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n            })}\n            onSubmit={values => {\n              console.log(values);\n              // axios('http://localhost:5000/updateProfile', {\n                axios('http://067a5647fe15.ngrok.io/updateProfileData',{\n                method: 'POST',\n                data: values,\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Accept': 'application/json'\n                }\n              })\n                .then(response => {\n                  console.log(response.data);\n                  if (response.data.statusCode == 200) {\n                    setShowUpdateError(false);\n                    setShowUpdateMessage(true);\n                    setMessage(response.data.statusDesc);\n                    // setLocalData(\"loginData\", response.data.data);\n                    // console.log(\"Login Page after api call--->\", localData);\n                    // navigate('/app/home');\n\n                  }\n                  else {\n                    // setShowLoginError(true);\n                    setShowUpdateError(true);\n                    setShowUpdateMessage(false);\n                    setMessage(response.data.statusDesc);\n                    // console.log(values)\n                  }\n                })\n                .catch(error => {\n                  // this({ errorMessage: error.message });\n                  console.error('There was an error!', error);\n                });\n              // }\n\n            }\n            }\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Card>\n                  <CardHeader\n                    subheader=\"The information can be edited\"\n                    title=\"Profile\"\n                  />\n                  <Divider />\n                  <CardContent>\n                    <Grid\n                      container\n                      spacing={3}\n                    >\n                      <Grid\n                        item\n                        md={6}\n                        xs={12}\n                      >\n                        <TextField\n                          fullWidth\n                          helperText=\"Your first name\"\n                          label=\"First name\"\n                          name=\"firstName\"\n                          onChange={handleChange}\n                          value={values.firstName}\n                          variant=\"outlined\"\n                        />\n                      </Grid>\n\n                      <Grid\n                        item\n                        md={6}\n                        xs={12}\n                      >\n                        <TextField\n                          fullWidth\n                          helperText=\"Your last name\"\n                          label=\"Last name\"\n                          name=\"lastName\"\n                          onChange={handleChange}\n                          value={values.lastName}\n                          variant=\"outlined\"\n                        />\n                      </Grid>\n                      {/* <Grid\n                        item\n                        md={6}\n                        xs={12}\n                      >\n                        <TextField\n                          fullWidth\n                          disabled\n                          label=\"License number\"\n                          name=\"licenseNumber\"\n                          onChange={handleChange}\n                          required\n                          value={values.licenseNumber}\n                          variant=\"outlined\"\n                        />\n                      </Grid> */}\n                      <Grid\n                        item\n                        md={6}\n                        xs={12}\n                      >\n                        <TextField\n                          error={Boolean(touched.email && errors.email)}\n                          fullWidth\n                          disabled\n                          required\n                          helperText={touched.email && errors.email}\n                          label=\"Email Address\"\n                          margin=\"normal\"\n                          name=\"email\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          type=\"email\"\n                          value={values.email}\n                          variant=\"outlined\"\n                        />\n\n                      </Grid>\n                      <Grid\n                        item\n                        md={6}\n                        xs={12}\n                      >\n                        <TextField\n                          fullWidth\n                          label=\"Mobile Number\"\n                          name=\"mobileNumber\"\n                          onChange={handleChange}\n                          // type=\"number\"\n                          value={values.mobileNumber}\n                          variant=\"outlined\"\n                        />\n                      </Grid>\n                      <Grid\n                        item\n                        md={6}\n                        xs={12}\n                      >\n                        <Box my={2}>\n                          <Button\n                            color=\"primary\"\n                            // disabled={isSubmitting}\n                            // fullWidth\n                            size=\"large\"\n                            type=\"submit\"\n                            variant=\"contained\"\n                            name=\"updateProfile\"\n\n                          >\n                            Update Profile\n                          </Button>\n                        </Box>\n                      </Grid>\n                      <Divider />\n\n                      {showUpdateMessage ? <Container maxWidth=\"sm\">\n                      <Grid\n                        item\n                        md={6}\n                        xs={12}\n                      >\n                        <div className=\"Update Success\">\n                          <Alert severity=\"success\">\n                            <AlertTitle>Updated Successfully</AlertTitle>\n                            <strong>{message}</strong>\n                          </Alert>\n                        </div>\n                        </Grid>\n                      </Container> : null}\n                      {showUpdateError ? <Container maxWidth=\"sm\">\n                      <Grid\n                        item\n                        md={6}\n                        xs={12}\n                      >\n                        <div className=\"Update Error\">\n                          <Alert severity=\"error\">\n                            <AlertTitle>Update Error</AlertTitle>\n                            <strong>{message}</strong>\n                          </Alert>\n                        </div>\n                        </Grid>\n                      </Container> : null}\n                    </Grid>\n                  </CardContent>\n                </Card>\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nProfileDetails.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ProfileDetails;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport CheckerProfile from './CheckerProfile';\nimport CheckerProfileDetails from './CheckerProfileDetails';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\n// const CheckerAccountView = () => {\n  function CheckerAccountView() {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Account\"\n    >\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={4}\n            md={8}\n            xs={10}\n          >\n            <CheckerProfile />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={10}\n            xs={12}\n          >\n            <CheckerProfileDetails />\n          </Grid>\n          \n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default CheckerAccountView;\n","import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport axios from 'axios';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n  NativeSelect,\r\n  Typography,\r\n  makeStyles,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  table:{\r\n    minWidth:256\r\n  }\r\n}));\r\n\r\nlet localData = {};\r\nconst getLocalData = (localDataKey) => {\r\n  if (localStorage.getItem(localDataKey) != null) {\r\n    return JSON.parse(localStorage.getItem(localDataKey));\r\n  }\r\n};\r\n\r\nconst setLocalData = (localDataKey, localDataValue) => {\r\n  localStorage.setItem(localDataKey, JSON.stringify(localDataValue));\r\n  localData = JSON.parse(localStorage.getItem(localDataKey));\r\n};\r\n\r\nconst CheckerFines = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  localData = getLocalData(\"loginData\");\r\n  const [state, setState] = useState({\r\n    finesData: []\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const result = await axios(\r\n        'http://localhost:5000/viewFinesChecker', {\r\n        // 'https://d88390afeebf.ngrok.io/viewFinesUser', {\r\n        method: 'POST',\r\n        data: { \"empId\": localData.empId },\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n      ).then(response => {\r\n        console.log(response.data);\r\n        if (response.data.statusCode == 200) {\r\n          setState({ finesData: response.data.data });\r\n        }\r\n        else {\r\n        }\r\n      })\r\n        .catch(error => {\r\n          console.error('There was an error!', error);\r\n        });\r\n    }\r\n    fetchData();\r\n    console.log(\"Inside Test-->\", state.finesData);\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Fines\"\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        // justifyContent=\"center\"\r\n      >\r\n         <Container maxWidth=\"md\">\r\n          <Box mb={3}>\r\n          <Typography\r\n            color=\"primary\"\r\n            variant=\"h1\"\r\n          >\r\n            List of fines issued\r\n          </Typography>\r\n          </Box>\r\n          <Box md={2}>\r\n          <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell >User's Email ID</TableCell>\r\n                  <TableCell >Parked Date</TableCell>\r\n                  <TableCell >Parked Car No</TableCell>\r\n                  <TableCell >Parking Fine</TableCell>\r\n                  <TableCell >Payment Status</TableCell>\r\n                  {/* <TableCell align=\"right\">Protein&nbsp;(g)</TableCell> */}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {state.finesData.map((row,index) => (\r\n                  <TableRow key={index}>\r\n                    <TableCell component=\"th\" scope=\"row\">{row.userEmail}</TableCell>\r\n                    <TableCell >{row.fineDate}</TableCell>\r\n                    <TableCell >{row.carRegistrationNo}</TableCell>\r\n                    <TableCell >{row.parkingFine}</TableCell>\r\n                    <TableCell >{row.paidStatus}</TableCell>\r\n                    {/* <TableCell align=\"right\">{row.protein}</TableCell> */}\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CheckerFines;\r\n","import React from 'react';\r\nimport {\r\n    Container,\r\n    Grid,\r\n    makeStyles,\r\n    Button\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport CheckerFines from './CheckerFines';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.dark,\r\n        minHeight: '100%',\r\n        paddingBottom: theme.spacing(3),\r\n        paddingTop: theme.spacing(3)\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nlet localData = {};\r\nconst getLocalData = (localDataKey) => {\r\n    if (localStorage.getItem(localDataKey) != null) {\r\n        return JSON.parse(localStorage.getItem(localDataKey));\r\n    }\r\n};\r\nconst setLocalData = (localDataKey, localDataValue) => {\r\n    localStorage.setItem(localDataKey, JSON.stringify(localDataValue));\r\n    localData = JSON.parse(localStorage.getItem(localDataKey));\r\n};\r\n\r\nconst CheckerFinesView = (state, props) => {\r\n    const classes = useStyles();\r\n    localData = getLocalData(\"loginData\");\r\n    return (\r\n        <Page\r\n            className={classes.root}\r\n            title=\"Dashboard\"\r\n        >\r\n            <CheckerFines/>\r\n        </Page>\r\n    );\r\n};\r\n\r\nexport default CheckerFinesView;\r\n","import React from 'react';\r\nimport Camera, { FACING_MODES, IMAGE_TYPES } from 'react-html5-camera-photo';\r\nimport 'react-html5-camera-photo/build/css/index.css';\r\n \r\nfunction TakePicture (props) {\r\n  function handleTakePhoto (dataUri) {\r\n    // Do stuff with the photo...\r\n    console.log('takePhoto');\r\n  }\r\n \r\n  function handleTakePhotoAnimationDone (dataUri) {\r\n    // Do stuff with the photo...\r\n    console.log('takePhoto');\r\n  }\r\n \r\n  function handleCameraError (error) {\r\n    console.log('handleCameraError', error);\r\n  }\r\n \r\n  function handleCameraStart (stream) {\r\n    console.log('handleCameraStart');\r\n  }\r\n \r\n  function handleCameraStop () {\r\n    console.log('handleCameraStop');\r\n  }\r\n \r\n  return (\r\n    <Camera\r\n      onTakePhoto = { (dataUri) => { handleTakePhoto(dataUri); } }\r\n      onTakePhotoAnimationDone = { (dataUri) => { handleTakePhotoAnimationDone(dataUri); } }\r\n      onCameraError = { (error) => { handleCameraError(error); } }\r\n      idealFacingMode = {FACING_MODES.ENVIRONMENT}\r\n      idealResolution = {{width: 640, height: 480}}\r\n      imageType = {IMAGE_TYPES.JPG}\r\n      imageCompression = {0.97}\r\n      isMaxResolution = {true}\r\n      isImageMirror = {false}\r\n      isSilentMode = {false}\r\n      isDisplayStartCameraError = {true}\r\n      isFullscreen = {false}\r\n      sizeFactor = {1}\r\n      onCameraStart = { (stream) => { handleCameraStart(stream); } }\r\n      onCameraStop = { () => { handleCameraStop(); } }\r\n    />\r\n  );\r\n}\r\n \r\nexport default TakePicture;","import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  Link,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport TakePicture from 'src/components/TakePicture';\nimport Camera from 'react-html5-camera-photo';\nimport 'react-html5-camera-photo/build/css/index.css';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\nconst loginErrorText = ({\n  loginError: {\n    display: 'none'\n  }\n});\nlet localData = {};\nconst getLocalData = (localDataKey) => {\n  if (localStorage.getItem(localDataKey) != null) {\n    localData = JSON.parse(localStorage.getItem(localDataKey));\n    return localData;\n  }\n};\nconst setLocalData = (localDataKey, localDataValue) => {\n  localStorage.setItem(localDataKey, JSON.stringify(localDataValue));\n  localData = JSON.parse(localStorage.getItem(localDataKey));\n};\nconst ScanAndCheck = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const [showLoginError, setShowLoginError] = useState(false);\n  localData = getLocalData(\"loginData\")\n  // const verfiyLogin = verifyLogin();\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  const fileSelectedHandler = event => {\n    setSelectedImage(event.target.files[0]);\n  };\n  const uploadHandler = () => {\n    const fd = new FormData();\n    fd.append('image', selectedImage);\n    console.log(fd);\n  };\n  return (\n    <Page\n      className={classes.root}\n      title=\"ScanAndCheck\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n      // justifyContent=\"center\"\n      >\n        <Container maxWidth=\"sm\">\n          {/* <TakePicture/> */}\n          {/* <div>\n            <input type=\"file\" label=\"Camera\" onChange={this.takePhoto}\n              help=\"Click to snap a photo\" accept=\"image/*\" />\n          </div> */}\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default ScanAndCheck;\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport DashboardLayout from 'src/layouts/DashboardLayout';\nimport CheckerDashboardLayout from 'src/layouts/CheckerDashboardLayout';\nimport MainLayout from 'src/layouts/MainLayout';\nimport AccountView from 'src/views/account/AccountView';\nimport HomeView from 'src/views/home/HomeView';\nimport LoginView from 'src/views/auth/LoginView';\nimport RegisterView from 'src/views/auth/RegisterView';\nimport VehicleRegistrationView from 'src/views/auth/VehicleRegistrationView';\nimport ForgotPasswordView from 'src/views/auth/ForgotPasswordView';\nimport ResetPasswordView from 'src/views/auth/ResetPasswordView';\nimport NotFoundView from 'src/views/errors/NotFoundView';\nimport SettingsView from 'src/views/settings/SettingsView';\nimport VehiclesView from 'src/views/vehicles/VehiclesView';\nimport PaymentView from 'src/views/payment/PaymentView';\nimport ParkingTicketView from 'src/views/parkingticket/ParkingTicketView';\nimport ActiveTicketView from 'src/views/parkingticket/ParkingTicketView/ActiveTicket';\nimport TicketHistory from 'src/views/parkingticket/ParkingTicketView/TicketHistory';\nimport FinesView from 'src/views/fines/FinesView';\nimport CheckerLoginView from 'src/views/checker/CheckerLoginView';\nimport CheckerAccountView from 'src/views/checker/CheckerAccountView';\nimport CheckerFinesView from 'src/views/checker/CheckerFinesView';\nimport ScanAndCheck from 'src/views/checker/ScanAndCheck';\n\nconst routes = [\n  {\n    path: 'app',\n    element: <DashboardLayout />,\n    children: [\n      { path: 'home', element: <HomeView /> },\n      { path: 'account', element: <AccountView /> },\n      { path: 'vehicles', element: <VehiclesView /> },\n      { path: 'payment', element: <PaymentView /> },\n      { path: 'fines', element: <FinesView /> },\n      { path: 'parkingTicket', element: <ParkingTicketView /> },\n      { path: 'parkingTicket/viewTicket', element: <ActiveTicketView /> },\n      { path: 'ticketHistory', element: <TicketHistory /> },\n      { path: 'settings', element: <SettingsView /> },\n      { path: '*', element: <Navigate to=\"/404\" /> },\n      { path: 'internal', element: <Navigate to=\"app/internal\"/> },\n    ]\n  },\n  {\n    path: '/',\n    element: <MainLayout />,\n    children: [\n      { path: 'register', element: <RegisterView /> },\n      { path: 'vehicleRegistration', element: <VehicleRegistrationView /> },\n      { path: 'resetPassword', element: <ResetPasswordView /> },\n      { path: 'forgotPassword', element: <ForgotPasswordView /> },\n      { path: '404', element: <NotFoundView /> },\n      { path: '/', element: <LoginView /> },\n      // { path: 'app/internal/', element: <CheckerLoginView/> },\n      { path: '*', element: <Navigate to=\"/404\" /> }\n    ]\n  },\n  {\n    path: 'app/internal',\n    element: <CheckerDashboardLayout />,\n    children: [\n      // { path: '/', element: <CheckerLoginView /> },\n      { path: 'home', element: <HomeView /> },\n      // { path: 'account', element: <CheckerAccountView /> },\n      { path: 'scan&check', element: <ScanAndCheck /> },\n      // { path: 'vehicles', element: <VehiclesView /> },\n      // { path: 'fines', element: <CheckerFinesView /> },\n      // { path: 'parkingTicket', element: <ParkingTicketView /> },\n      // { path: 'settings', element: <SettingsView /> },\n      { path: '*', element: <Navigate to=\"/404\" /> }\n    ]\n  },\n];\n\nexport default routes;\n","import 'react-perfect-scrollbar/dist/css/styles.css';\nimport React from 'react';\nimport { useRoutes } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core';\nimport GlobalStyles from 'src/components/GlobalStyles';\nimport 'src/mixins/chartjs';\nimport theme from 'src/theme';\nimport routes from 'src/routes';\n\nconst App = () => {\n  const routing = useRoutes(routes);\n\n  let localData= {};\nconst getLocalData = (localDataKey) => {\n  if (localStorage.getItem(localDataKey) != null){\n    localData = JSON.parse(localStorage.getItem(localDataKey));\n  }\n};\nconst setLocalData = (localDataKey,localDataValue) => {\n    localStorage.setItem(localDataKey, JSON.stringify(localDataValue));\n    localData = JSON.parse(localStorage.getItem(localDataKey));\n};\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      {routing}\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n), document.getElementById('root'));\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/quick-e-park-logo.e295ee8c.jpg\";"],"sourceRoot":""}